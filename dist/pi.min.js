(()=>{"use strict";var t={607:(t,e,i)=>{e.l=void 0;const s=i(956),n=i(735),o=i(505),r=i(330),a=i(506),h=i(872),l=i(937),c=i(38),u=i(760),f=i(554),d=i(107),m=i(236),_=i(75),p=i(586),g=i(9),y=i(164),v=i(699),x=i(557);e.l={ShutingYard:o.Shutingyard,Numeric:s.Numeric,NumExp:n.NumExp,Fraction:a.Fraction,Root:h.NthRoot,Monom:l.Monom,Polynom:c.Polynom,Equation:u.Equation,LinearSystem:f.LinearSystem,Rational:d.Rational,Logicalset:m.Logicalset,Random:r.Random,PolynomExpFactor:_.PolynomExpFactor,PolynomExpProduct:_.PolynomExpProduct,Geometry:{Vector:p.Vector,Point:x.Point,Line:g.Line,Triangle:y.Triangle,Circle:v.Circle}},window.Pi=e.l},760:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Equation=e.PARTICULAR_SOLUTION=void 0;const s=i(38),n=i(956),o=i(506),r=i(872);var a;!function(t){t.real="\\mathbb{R}",t.varnothing="\\varnothing"}(a=e.PARTICULAR_SOLUTION||(e.PARTICULAR_SOLUTION={}));class h{constructor(...t){if(this._varnothing=a.varnothing,this._real=a.real,this.hasVariable=t=>this.variables.includes(t),this._randomizeDefaults={degree:2},this.parse=t=>{let e,i;if(i=this._findSign(t),!1!==i)return e=t.split(i),this.create(new s.Polynom(e[0]),new s.Polynom(e[1]),this._formatSign(i));console.error("The equation is not valid (no sign found)")},this.create=(t,e,i)=>(this._left=t,this._right=e,this._sign=this._formatSign(i),this),this.clone=()=>(new h).create(this._left.clone(),this._right.clone(),this._sign+""),this.randomize=(t,e)=>(new h).create(new s.Polynom,new s.Polynom,e),this.moveLeft=()=>(this._left=this._left.clone().subtract(this._right),this._right.zero(),this),this.reorder=t=>{if(this._left.subtract(this._right),this._right.zero(),t)return this.moveLeft();let e;for(let t of this._left.monoms)t.degree().isZero()&&(e=t.clone(),this._left.subtract(e),this._right.subtract(e));return this._left.reorder(),this._right.reorder(),this},this.simplify=()=>(this.multiply(n.Numeric.lcm(...this._left.getDenominators(),...this._right.getDenominators())),this.divide(n.Numeric.gcd(...this._left.getNumerators(),...this._right.getNumerators())),this),this.isolate=t=>{if(!this.degree(t).isOne())return!1;if(this.isMultiVariable())return!1;let e,i;this._left.subtract(this._right),this._right.zero();for(let i of this._left.monoms)i.hasLetter(t)||(e=i.clone(),this._left.add(e.clone().opposed()),this._right.add(e.clone().opposed()));return 1===this._left.length&&(i=this._left.monoms[0].coefficient.clone(),this._left.divide(i),this._right.divide(i),this)},this.replaceBy=(t,e)=>(this._left.replaceBy(t,e),this._right.replaceBy(t,e),this),this.multiply=t=>{let e=new o.Fraction(t);return this._left.multiply(e),this._right.multiply(e),"="!==this._sign&&-1===e.sign()&&this._reverseSign(),this},this.divide=t=>{let e=new o.Fraction(t);return e.isZero()?this:this.multiply(e.invert())},this.degree=t=>o.Fraction.max(this._left.degree(t),this._right.degree(t)),this.isMultiVariable=()=>this._left.isMultiVariable||this._right.isMultiVariable,this.letters=()=>[...new Set([...this._left.letters(),...this._right.letters()])],this.solve=()=>{switch(this._solutions=[],this._polynom=this._left.clone().subtract(this._right),this._polynom.degree().value){case 0:case 1:this._solveDegree1();break;case 2:this._solveDegree2();break;default:this._solveDegree3plus()}return this._solutions=h.makeSolutionsUnique(this._solutions),this},this.test=t=>this.left.evaluate(t).isEqual(this.right.evaluate(t)),this._findSign=t=>t.includes("geq")?t.includes("\\geq")?"\\geq":"geq":t.includes("leq")?t.includes("\\leq")?"\\leq":"leq":t.includes(">=")?">=":t.includes("=>")?"=>":t.includes(">")?">":t.includes("<=")?"<=":t.includes("=<")?"=<":t.includes("<")?"<":t.includes("=")?"=":(console.log("Equation: parse string : sign not found"),!1),this._formatSign=t=>void 0===t?"=":t.includes("geq")||t.includes(">=")||t.includes("=>")?">=":t.includes(">")?">":t.includes("leq")||t.includes("<=")||t.includes("=<")?"<=":t.includes("<")?"<":"=",this._reverseSign=()=>"="===this._sign?this:this._sign.includes("<")?(this._sign.replace("<",">"),this):this._sign.includes(">")?(this._sign.replace(">","<"),this):this,this.isGreater=()=>-1!==this._sign.indexOf(">")||-1!==this._sign.indexOf("geq"),this.isStrictEqual=()=>"="===this._sign,this.isAlsoEqual=()=>-1!==this._sign.indexOf("=")||-1!==this._sign.indexOf("geq")||-1!==this._sign.indexOf("leq")||void 0,this._solveDegree1=t=>{const e=this._polynom.monomByDegree(1,t).coefficient,i=this._polynom.monomByDegree(0,t).coefficient,s=i.clone().opposed().divide(e);let n;return this.isStrictEqual()?0===e.value?0===i.value?this._solutions=[{tex:this._real,value:NaN,exact:!1}]:this._solutions=[{tex:this._varnothing,value:NaN,exact:!1}]:this._solutions=[{tex:s.tex,value:s.value,exact:s}]:(n=0===e.value?0===i.value&&this.isAlsoEqual()?"\\mathbb{R}":i.value>0?this.isGreater()?this._real:this._varnothing:this.isGreater()?this._varnothing:this._real:this.isGreater()&&1===e.sign()||!this.isGreater()&&-1===e.sign()?`\\left${this.isAlsoEqual()?"\\[":"\\]"}${s};+\\infty\\right\\[`:`\\left\\]-\\infty;${s} \\right\\${this.isAlsoEqual()?"\\]":"\\["}`,this._solutions=[{tex:n,value:NaN,exact:!1}]),this._solutions},this._solveDegree2=t=>{let e,i,s,a,h,l,c=this._polynom.monomByDegree(2,t).coefficient,u=this._polynom.monomByDegree(1,t).coefficient,f=this._polynom.monomByDegree(0,t).coefficient,d=n.Numeric.lcm(c.denominator,u.denominator,f.denominator),m=c.multiply(d).value,_=u.multiply(d).value;if(e=_*_-4*m*f.multiply(d).value,e>0)if(s=(-_-Math.sqrt(e))/(2*m),a=(-_+Math.sqrt(e))/(2*m),e>1e5)this._solutions=[{tex:((-_-Math.sqrt(e))/(2*m)).toFixed(5),value:s,exact:!1},{tex:((-_+Math.sqrt(e))/(2*m)).toFixed(5),value:a,exact:!1}];else if(i=new r.NthRoot(e).reduce(),i.hasRadical()){let t=n.Numeric.gcd(_,2*m,i.coefficient);i.coefficient=i.coefficient/t,this._solutions=0!==_?2*m/t==1?[{tex:`${-_/t} - ${i.tex}`,value:s,exact:!1},{tex:`${-_/t} + ${i.tex}`,value:a,exact:!1}]:[{tex:`\\frac{${-_/t} - ${i.tex} }{ ${2*m/t} }`,value:s,exact:!1},{tex:`\\frac{${-_/t} + ${i.tex} }{ ${2*m/t} }`,value:a,exact:!1}]:2*m/t==1?[{tex:`- ${i.tex}`,value:s,exact:!1},{tex:`${i.tex}`,value:a,exact:!1}]:[{tex:`\\frac{- ${i.tex} }{ ${2*m/t} }`,value:s,exact:!1},{tex:`\\frac{${i.tex} }{ ${2*m/t} }`,value:a,exact:!1}]}else{const t=new o.Fraction(-_-i.coefficient,2*m).reduce(),e=new o.Fraction(-_+i.coefficient,2*m).reduce();this._solutions=[{tex:t.frac,value:s,exact:t},{tex:e.frac,value:a,exact:e}]}else if(0===e){const t=new o.Fraction(-_,2*m).reduce();this._solutions=[{tex:t.frac,value:t.value,exact:t}]}else this._solutions=[{tex:this._varnothing,value:NaN,exact:!1}];return this.isStrictEqual()||(2===this._solutions.length?(h=s<a?this._solutions[0].tex:this._solutions[1].tex,l=s<a?this._solutions[1].tex:this._solutions[0].tex,this.isGreater()&&1===c.sign()||!this.isGreater()&&-1===c.sign()?this._solutions=[{tex:`\\left]-\\infty ; ${h}\\right${this.isAlsoEqual()?"]":"["} \\cup \\left${this.isAlsoEqual()?"[":"]"}${l};+\\infty\\right[`,value:NaN,exact:!1}]:this._solutions=[{tex:`\\left${this.isAlsoEqual()?"[":"]"}${h} ; ${l}\\right${this.isAlsoEqual()?"]":"["}`,value:NaN,exact:!1}]):1===this._solutions.length&&this._solutions[0].tex!==this._varnothing?this.isAlsoEqual()?(this.isGreater()&&1===c.sign()||!this.isGreater()&&-1===c.sign())&&(this._solutions=[{tex:this._real,value:NaN,exact:!1}]):this.isGreater()&&1===c.sign()||!this.isGreater()&&-1===c.sign()?this._solutions=[{tex:`\\left]-\\infty ; ${this._solutions[0].tex}\\right[ \\cup \\left]${this._solutions[0].tex};+\\infty\\right[`,value:NaN,exact:!1}]:this._solutions=[{tex:this._varnothing,value:NaN,exact:!1}]:this.isGreater()?this._solutions=[{tex:1===c.sign()?this._real:this._varnothing,value:NaN,exact:!1}]:this._solutions=[{tex:-1===c.sign()?this._real:this._varnothing,value:NaN,exact:!1}]),this._solutions},this._solveDegree3plus=t=>{let e=this.clone().moveLeft();return e.left.factorize(),this._solutions=[],e.left.factors.forEach((e=>{if(e.degree(t).leq(2)){let t=new h(e,0);t.solve(),t.solutions.forEach((t=>{this._solutions.push(t)}))}else console.log(e.tex,": cannot actually get the solution of this equation")})),this._solutions},this._left=(new s.Polynom).zero(),this._right=(new s.Polynom).zero(),this._sign="=",1===t.length){if(t[0]instanceof h)return t[0].clone();"string"==typeof t[0]&&this.parse(t[0])}else{if(2!==t.length)return this;t[0]instanceof s.Polynom?this.left=t[0].clone():"string"==typeof t[0]&&(this.left=new s.Polynom(t[0])),t[1]instanceof s.Polynom?this.right=t[1].clone():"string"==typeof t[1]&&(this.right=new s.Polynom(t[1]))}return this}get left(){return this._left}set left(t){this._left=t}get right(){return this._right}set right(t){this._right=t}get sign(){return this._sign}set sign(t){this._sign=this._formatSign(t)}get solutions(){return this._solutions}get isEquation(){return!0}get solution(){return 1!==this._solutions.length||this._solutions[0].tex!==this._real&&this._solutions[0].tex!==this._varnothing&&!this._solutions[0].tex.includes("\\left")?`S = \\left{ ${this._solutions.map((t=>t.tex)).join(";")} \\right}`:`S = ${this._solutions[0]}`}get isReal(){return void 0===this._solutions&&this.solve(),this._solutions[0].tex===this._real}get isVarnothing(){return void 0===this._solutions&&this.solve(),this._solutions[0].tex===this._varnothing}get signAsTex(){return">="===this._sign||"=>"===this._sign||"geq"===this._sign?"\\geq":"<="===this._sign||"=<"===this._sign||"leq"===this._sign?"\\leq":this._sign}get tex(){return`${this._left.tex}${this.signAsTex}${this._right.tex}`}get display(){return`${this._left.display}${this.signAsTex}${this._right.display}`}get raw(){return`${this._left.raw}${this.signAsTex}${this._right.raw}`}get variables(){return[...new Set(this._right.variables.concat(this._left.variables))]}get numberOfVars(){return this.variables.length}get randomizeDefaults(){return this._randomizeDefaults}set randomizeDefaults(t){this._randomizeDefaults=t}static makeSolutionsUnique(t,e){let i=[],s=t.filter((t=>!i.includes(t.tex)&&(i.push(t.tex),!0)));return!0===e&&s.sort(((t,e)=>t.value-e.value)),s}}e.Equation=h},554:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LinearSystem=void 0;const s=i(760),n=i(38),o=i(330),r=i(506);class a{constructor(...t){return this.parse=(...t)=>(this._equations=t.map((t=>new s.Equation(t))),this._findLetters(),this),this.setCoefficient=(...t)=>{this._equations=[];let e=0;for(;e<t.length-this._letters.length;){let i=(new n.Polynom).parse(this._letters.join(""),...t.slice(e,e+this._letters.length)),o=new n.Polynom(t[e+this._letters.length].toString()),r=(new s.Equation).create(i,o);this._equations.push(r.clone()),e=e+this._letters.length+1}return this},this.clone=()=>(new a).parse(...this._equations.map((t=>t.clone()))),this.setLetters=(...t)=>(this._letters=t,this),this._findLetters=()=>{let t=new Set;for(let e of this._equations)t=new Set([...t,...e.variables]);return this._letters=[...t],this},this.generate=(...t)=>{let e=[];for(let i of t)"number"==typeof i?e.push(new r.Fraction(i.toString())):e.push(i.clone());this._equations=[];for(let i=0;i<t.length;i++)this._equations.push(this._generateOneEquation(...e));return this},this._generateOneEquation=(...t)=>{let e,i=[],n=(new r.Fraction).zero(),a=["x","y","z","t","u","v","w","a","b","c","d","e","f","g","h","i","j","k","l"],h="";for(let e=0;e<t.length;e++)i.push(o.Random.numberSym(5)),n.add(t[e].clone().multiply(i[e])),h+=`${i[e]<0?i[e]:"+"+i[e]}${a[e]}`;return e=new s.Equation(`${h}=${n.display}`),1!=e.right.monoms[0].coefficient.denominator&&e.multiply(new r.Fraction(e.right.monoms[0].coefficient.denominator,1)),this._checkIfLinerCombination(e)?e:this._generateOneEquation(...t)},this.mergeEquations=(t,e,i,s)=>{let n=t.clone().multiply(new r.Fraction(i)),o=e.clone().multiply(new r.Fraction(s));return n.left.add(o.left),n.right.add(o.right),n},this.reorder=()=>{for(let t of this._equations)t.reorder();return this},this.solve=()=>{this._solutions={},this._resolutionSteps=[],this.reorder();let t=this.variables.sort();for(let e of t)this._solutions[e]=this._solveOneLetter(e,t);return this},this._checkIfLinerCombination=t=>!0,this.log=()=>{let t="";for(let e of this._equations)t+=`${e.tex}\\n}`;return t},this._equations=[],this._letters="xy".split(""),void 0!==t&&t.length>0&&this.parse(...t),this}get equations(){return this._equations}set equations(t){this._equations=t}get letters(){return this._letters.join("")}set letters(t){this._letters=t.split("")}get isSolvable(){return this.variables.length===this._equations.length}get variables(){let t=[];for(let e of this._equations)t=t.concat(e.variables);return[...new Set(t)].sort()}get tex(){let t,e,i=this.clone().reorder(),s=i.variables,n=[];for(let o of i.equations){t=[];for(let i of s)e=o.left.monomByLetter(i),0===t.length?t.push(e.isZero()?"":e.tex):t.push(e.isZero()?"":(1===e.coefficient.sign()?"+":"")+e.tex);t.push("="),t.push(o.right.tex),n.push(t.join("&"))}return`\\left\\{\\begin{array}{${"r".repeat(s.length)}cl}${n.join("\\\\ ")}\\end{array}\\right.`}get solution(){let t=[];void 0===this._solutions&&this.solve();for(let e in this._solutions){if(this._solutions[e].isReal)return void console.log(`Undetermined (letter ${e})`);if(this._solutions[e].isVarnothing)return void console.log(`Undefined (letter ${e})`);t.push(this._solutions[e].value.frac)}return`(${t.join(";")})`}_linearReduction(t,e,i){let s=t.left.monomByDegree(1,i).coefficient.clone(),n=e.left.monomByDegree(1,i).coefficient.clone().opposed();return this.mergeEquations(t,e,n,s)}_solveOneLetter(t,e){let i=this.clone().equations,s=[];for(let n of e)if(n!==t){for(let t=0;t<i.length-1;t++)s.push(this._linearReduction(i[t],i[t+1],n));this._resolutionSteps.push((new a).parse(...s)),i=this._resolutionSteps[this._resolutionSteps.length-1].clone().equations,s=[]}let n=this._resolutionSteps[this._resolutionSteps.length-1].equations[0];return n.solve(),{value:new r.Fraction(n.solutions[0].value),isReal:n.isReal,isVarnothing:n.isVarnothing}}}e.LinearSystem=a},236:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Logicalset=void 0;const s=i(505);e.Logicalset=class{constructor(t){return this.parse=t=>(this._rpn=new s.Shutingyard(s.ShutingyardMode.SET).parse(t).rpn,this),this._rawString=t,this.parse(t),this}get isLogicalset(){return!0}evaluate(t,e){let i,s=[];if(void 0===e){i=new Set;for(let e in t)i=new Set([...i,...t[e]])}else i=new Set(e);for(let e of this._rpn)if("variable"===e.tokenType)void 0===t[e.token]?s.push(new Set):s.push(new Set(t[e.token]));else switch(e.token){case"&":if(s.length>=2){let t=s.pop(),e=s.pop();s.push(new Set([...e].filter((e=>t.has(e)))))}break;case"|":if(s.length>=2){let t=s.pop(),e=s.pop();s.push(new Set([...e,...t]))}break;case"-":if(s.length>=2){let t=s.pop(),e=s.pop();s.push(new Set([...e].filter((e=>!t.has(e)))))}break;case"!":if(s.length>=1){let t=s.pop();s.push(new Set([...i].filter((e=>!t.has(e)))))}}return[...s[0]].sort()}vennAB(){return this.evaluate({A:["A","AB"],B:["B","AB"]},["A","B","AB","E"])}vennABC(){return this.evaluate({A:["A","AB","AC","ABC"],B:["B","AB","BC","ABC"],C:["C","AC","BC","ABC"]},["A","B","C","AB","AC","BC","E"])}get rpn(){return this._rpn}get tex(){let t=[];for(let e of this._rpn)if("variable"===e.tokenType)t.push(e);else switch(e.token){case"&":if(t.length>=2){let e=t.pop(),i=t.pop();"mix"===i.tokenType&&(i.token=`( ${i.token} )`),"mix"===e.tokenType&&(e.token=`( ${e.token} )`),t.push({token:`${i.token} \\cap ${e.token}`,tokenType:"mix"})}break;case"|":if(t.length>=2){let e=t.pop(),i=t.pop();"mix"===i.tokenType&&(i.token=`( ${i.token} )`),"mix"===e.tokenType&&(e.token=`( ${e.token} )`),t.push({token:`${i.token} \\cup ${e.token}`,tokenType:"mix"})}break;case"-":if(t.length>=2){let e=t.pop(),i=t.pop();"mix"===i.tokenType&&(i.token=`( ${i.token} )`),"mix"===e.tokenType&&(e.token=`( ${e.token} )`),t.push({token:`${i.token} \\setminus ${e.token}`,tokenType:"mix"})}break;case"!":if(t.length>=1){let e=t.pop();t.push({token:`\\overline{ ${e.token} }`,tokenType:"variable"})}}return t[0].token}}},937:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Monom=void 0;const s=i(956),n=i(505),o=i(506);class r{constructor(t){return this.parse=t=>("string"==typeof t?this._shutingYardToReducedMonom(t):"number"==typeof t?(this._coefficient=new o.Fraction(t),this._literal={}):t instanceof o.Fraction?(this._coefficient=t.clone(),this._literal={}):t instanceof r&&(this._coefficient=t._coefficient.clone(),this._literal=this.copyLiterals(t.literal)),this),this.addToken=(t,e)=>{let i,s,a,h,l;if(e.tokenType===n.ShutingyardType.COEFFICIENT)t.push(new r(new o.Fraction(e.token)));else if(e.tokenType===n.ShutingyardType.VARIABLE){let i=(new r).one();i.setLetter(e.token,1),t.push(i.clone())}else if(e.tokenType===n.ShutingyardType.OPERATION)switch(e.token){case"-":s=t.pop()||(new r).zero(),i=t.pop()||(new r).zero(),t.push(i.subtract(s));break;case"*":s=t.pop()||(new r).one(),i=t.pop()||(new r).one(),t.push(i.multiply(s));break;case"/":s=t.pop()||(new r).one(),i=t.pop()||(new r).one(),t.push(i.divide(s));break;case"^":l=t.pop().coefficient||(new o.Fraction).one(),a=t.pop()||(new r).one(),h=a.variables[0],void 0!==h&&a.setLetter(h,l),t.push(a)}},this._shutingYardToReducedMonom=t=>{const e=(new n.Shutingyard).parse(t).rpn;let i=[];if(0===e.length)return this.zero(),this;if(1===e.length){const t=e[0];return this.one(),"coefficient"===t.tokenType?this.coefficient=new o.Fraction(t.token):"variable"===t.tokenType&&this.setLetter(t.token,1),this}for(const t of e)this.addToken(i,t);return this.one(),this.multiply(i[0]),this},this.clone=()=>{let t=new r;t.coefficient=this._coefficient.clone();for(let e in this._literal)t.setLetter(e,this._literal[e].clone());return t},this.copyLiterals=t=>{let e={};for(let i in t)e[i]=t[i].clone();return e},this.makeSame=t=>{for(let e in t._literal)this.setLetter(e,t._literal[e].clone());return this},this.zero=()=>(this._coefficient=(new o.Fraction).zero(),this._literal={},this),this.one=()=>(this._coefficient=(new o.Fraction).one(),this._literal={},this),this.clean=()=>{for(let t in this._literal)this._literal[t].isZero()&&delete this._literal[t];return this},this.reduce=()=>(this.clean(),this.coefficient.reduce(),this),this.opposed=()=>(this._coefficient.opposed(),this),this.add=(...t)=>{for(let e of t)this.isSameAs(e)?(this.isZero()&&this.makeSame(e),this._coefficient.add(e.coefficient)):console.log("Add: Is not similar: ",e.display);return this},this.subtract=(...t)=>{for(let e of t)this.isSameAs(e)?(this.isZero()&&this.makeSame(e),this._coefficient.add(e.clone().coefficient.opposed())):console.log("Subtract: Is not similar: ",e.display);return this},this.multiply=(...t)=>{for(let e of t){this._coefficient.multiply(e.coefficient);for(let t in e.literal)void 0===this._literal[t]?this._literal[t]=e.literal[t].clone():this._literal[t].add(e.literal[t])}return this},this.multiplyByNumber=t=>(this._coefficient.multiply(t),this),this.divide=(...t)=>{for(let e of t){this._coefficient.divide(e.coefficient);for(let t in e.literal)this._literal[t]=void 0===this._literal[t]?e.literal[t].clone().opposed():this._literal[t].subtract(e.literal[t]),this._literal[t].isZero()&&delete this._literal[t]}return this},this.pow=t=>{this._coefficient.pow(t);for(let e in this._literal)this._literal[e].multiply(t);return this},this.root=t=>this,this.sqrt=()=>{if(this.isSquare()){this._coefficient.sqrt();for(let t in this._literal)this._literal[t].clone().divide(2)}return this.root(2)},this.compare=(t,e)=>{switch(void 0===e&&(e="="),e){case"=":return!!this.compare(t,"same")&&this._coefficient.isEqual(t.coefficient);case"same":let e=this.variables,i=t.variables,s=e.concat(i.filter((t=>e.indexOf(t)<0)));if(0===e.length&&0===i.length)return!0;if(!this.isZero()&&!t.isZero())for(let e of s){if(void 0===this._literal[e]||void 0===t.literal[e])return!1;if(!this._literal[e].isEqual(t.literal[e]))return!1}return!0;default:return!1}},this.isEqual=t=>this.compare(t,"="),this.isSameAs=t=>this.compare(t,"same"),this.isSquare=()=>!!this.coefficient.isSquare()&&this.isLiteralSquare(),this.isLiteralSquare=()=>{for(let t in this.literal){if(this.literal[t].isRational())return!1;if(this.literal[t].isEven())return!1}return!0},this.hasFractionCoefficient=()=>{for(let t in this._literal)if(this._literal[t].isRational())return!0;return!1},this.hasLetter=t=>void 0!==this._literal[void 0===t?"x":t]&&this._literal[void 0===t?"x":t].isNotZero(),this.setLetter=(t,e)=>{e instanceof o.Fraction?(this.hasLetter(t)&&e.isZero()&&delete this._literal[t],this._literal[t]=e.clone()):this.setLetter(t,new o.Fraction(e))},this.degree=t=>0===this.variables.length?(new o.Fraction).zero():void 0===t?Object.values(this._literal).reduce(((t,e)=>t.clone().add(e))):void 0===this._literal[t]?(new o.Fraction).zero():this._literal[t].clone(),this.evaluate=t=>{let e=this.coefficient.clone();if("number"==typeof t||t instanceof o.Fraction){let e={};return e[this.variables[0]]=new o.Fraction(t),this.evaluate(e)}if("object"==typeof t){if(0===this.variables.length)return this.coefficient;for(let i in this._literal){if(void 0===t[i])return(new o.Fraction).zero();let s=new o.Fraction(t[i]);e.multiply(s.pow(this._literal[i]))}}return e},this.derivative=t=>{if(void 0===t&&(t="x"),this.hasLetter(t)){let e=this._literal[t].clone(),i=this.clone();return i._literal[t].subtract(1),i._coefficient.multiply(new o.Fraction(e.clone())),i}return(new r).zero()},this.primitive=t=>{void 0===t&&(t="x");let e,i=this.clone();return i.hasLetter(t)?(e=i.degree(t).clone().add(1),i.coefficient=i.coefficient.clone().divide(e),i.setLetter(t,e)):(i.coefficient.isZero()&&(i.coefficient=(new o.Fraction).one()),i.setLetter(t,1)),i},this.areSameAs=(...t)=>{for(let e=0;e<t.length;e++)if(!this.isSameAs(t[e]))return!1;return!0},this.areEquals=(...t)=>{if(!this.areSameAs(...t))return!1;for(let e of t)if(!this._coefficient.isEqual(e.coefficient))return!1;return!0},this.isDivisible=t=>{if(t.degree().isStrictlyPositive())for(let e of t.variables)if(!this.degree(e).geq(t.degree(e)))return!1;return!(!this.coefficient.isRational()&&!t.coefficient.isRational())||this.coefficient.clone().divide(t.coefficient).isRelative()},this.zero(),void 0!==t&&this.parse(t),this}get coefficient(){return this._coefficient}set coefficient(t){this._coefficient=new o.Fraction(t)}get literal(){return this._literal}get literalSqrt(){if(this.isLiteralSquare()){let t={};for(let e in this._literal)t[e]=this._literal[e].clone().sqrt();return t}return this._literal}set literal(t){this._literal=t}set literalStr(t){for(const e of[...t.matchAll(/([a-z])\^([+-]?[0-9]+)/g)])e[1]in this._literal||(this._literal[e[1]]=(new o.Fraction).zero()),this._literal[e[1]].add(+e[2]);for(const e of[...t.matchAll(/([a-z](?!\^))/g)])e[1]in this._literal||(this._literal[e[1]]=(new o.Fraction).zero()),this._literal[e[1]].add(1)}get variables(){let t=this.clone().clean();return Object.keys(t.literal)}get display(){let t="",e=Object.keys(this._literal).sort();for(let i of e)this._literal[i].isNotZero()&&(t+=`${i}`,this._literal[i].isNotEqual(1)&&(t+=`^(${this._literal[i].display})`));return""===t?0!=this._coefficient.value?`${this._coefficient.display}`:"":1===this._coefficient.value?t:-1===this._coefficient.value?`-${t}`:0===this._coefficient.value?"0":`${this._coefficient.display}${t}`}get dividers(){if(!this.coefficient.isRelative())return[this.clone()];if(this.hasFractionCoefficient())return[this.clone()];if(this.coefficient.numerator>1e6)return[this.clone()];const t=s.Numeric.dividers(Math.abs(this.coefficient.numerator));let e=[];for(let t in this.literal)e=this._getLiteralDividers(e,t);const i=[];if(e.length>0&&t.length>0)for(let s of t)for(let t of e){let e=new r;e.coefficient=new o.Fraction(s),e.literal=t,i.push(e)}else if(0===t.length)for(let t of e){let e=new r;e.coefficient=(new o.Fraction).one(),e.literal=t,i.push(e)}else for(let e of t){let t=new r;t.coefficient=new o.Fraction(e),i.push(t)}return 0===i.length?[(new r).one()]:i}_getLiteralDividers(t,e){let i=[];for(let s=0;s<=this.literal[e].value;s++)if(0===t.length){let t={};t[e]=new o.Fraction(s),i.push(t)}else for(let n of t){let t={};for(let e in n)t[e]=n[e];t[e]=new o.Fraction(s),i.push(t)}return i}get displayWithSign(){let t=this.display;return("-"!==t[0]?"+":"")+t}get texWithSign(){return this.coefficient.isStrictlyPositive()?"+"+this.tex:this.tex}get plotFunction(){let t="",e=Object.keys(this._literal).sort();for(let i of e)this._literal[i].isNotZero()&&(t+=(""===t?"":"*")+`${i}`,this._literal[i].isNotEqual(1)&&(t+=`^(${this._literal[i].display})`));return""===t?0!=this._coefficient.value?`${this._coefficient.display}`:"":1===this._coefficient.value?t:-1===this._coefficient.value?`-${t}`:0===this._coefficient.value?"0":`${this._coefficient.display}*${t}`}get tex(){let t="",e=Object.keys(this._literal).sort();for(let i of e)this._literal[i].isNotZero()&&(t+=`${i}`,this._literal[i].isNotEqual(1)&&(t+=`^{${this._literal[i].tfrac}}`));return""===t?0!=this._coefficient.value?`${this._coefficient.frac}`:"0":1===this._coefficient.value?t:-1===this._coefficient.value?`-${t}`:0===this._coefficient.value?"0":`${this._coefficient.frac}${t}`}isZero(){return 0===this._coefficient.value}isOne(){return 1===this._coefficient.value&&0===this.variables.length}}e.Monom=r,r.lcm=(...t)=>{for(let e of t)if(e.hasFractionCoefficient())return(new r).zero();let e=new r,i=t.map((t=>t.coefficient.numerator)),n=t.map((t=>t.coefficient.denominator)),a=s.Numeric.gcd(...i),h=s.Numeric.lcm(...n);e.coefficient=new o.Fraction(a,h).reduce();for(let i of t){for(let t in e.literal)t in i.literal||e.literal[t].zero();for(let t in i.literal)void 0===e.literal[t]&&i.literal[t].isStrictlyPositive()?e.literal[t]=i.literal[t].clone():e.literal[t]=new o.Fraction(Math.min(i.literal[t].value,e.literal[t].value))}return e},r.xmultiply=(...t)=>{let e=(new r).one();for(let i of t)e.multiply(i);return e}},38:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Polynom=void 0;const s=i(937),n=i(505),o=i(956),r=i(506),a=i(760);class h{constructor(t,...e){return this.mark_as_dirty=()=>{this.dirty_factors=!0,this.dirty_zeroes=!0,this.euclidianCache={}},this.addToken=(t,e)=>{switch(e.tokenType){case n.ShutingyardType.COEFFICIENT:t.push(new h(e.token));break;case n.ShutingyardType.VARIABLE:t.push((new h).add(new s.Monom(e.token)));break;case n.ShutingyardType.CONSTANT:console.log("Actually, not supported - will be added later !");break;case n.ShutingyardType.OPERATION:if(t.length>=2){const i=t.pop(),s=t.pop();if("+"===e.token)t.push(s.add(i));else if("-"===e.token)t.push(s.subtract(i));else if("*"===e.token)t.push(s.multiply(i));else if("/"===e.token)i.degree().isStrictlyPositive()?console.log("divide by a polynom -> should create a rational polynom !"):t.push(s.divide(i.monoms[0].coefficient));else if("^"===e.token)if(i.degree().isStrictlyPositive())console.error("Cannot elevate a polynom with another polynom !");else if(i.monoms[0].coefficient.isRelative())t.push(s.pow(i.monoms[0].coefficient.value));else if(1===s.monoms.length&&s.monoms[0].coefficient.isOne()){for(let t in s.monoms[0].literal)s.monoms[0].literal[t].multiply(i.monoms[0].coefficient);t.push(s)}else console.error("Cannot have power with fraction")}else{if("-"!==e.token)throw"Error parsing the polynom "+this._rawString;t.push(t.pop().opposed())}break;case n.ShutingyardType.MONOM:console.error("The monom token should not appear here");break;case n.ShutingyardType.FUNCTION:console.error("The function token should not appear here - might be introduced later.")}},this.parse=(t,...e)=>{if(this._monoms=[],this._factors=[],this.mark_as_dirty(),"string"==typeof t)return this._parseString(t,...e);if(!("number"==typeof t||t instanceof r.Fraction||t instanceof s.Monom)||void 0!==e&&0!==e.length){if(t instanceof s.Monom&&e.length>0)this._monoms.push(new s.Monom(t)),e.forEach((t=>{this._monoms.push(new s.Monom(t))}));else if(t instanceof h)for(const e of t.monoms)this._monoms.push(e.clone())}else this._monoms.push(new s.Monom(t));return this},this.clone=()=>{const t=new h,e=[];for(const t of this._monoms)e.push(t.clone());return t.monoms=e,t},this.zero=()=>(this._monoms=[],this._monoms.push((new s.Monom).zero()),this._rawString="0",this.mark_as_dirty(),this),this.one=()=>(this._monoms=[],this._monoms.push((new s.Monom).one()),this._rawString="1",this.mark_as_dirty(),this),this.empty=()=>(this._monoms=[],this._rawString="",this.mark_as_dirty(),this),this.opposed=()=>(this._monoms=this._monoms.map((t=>t.opposed())),this.mark_as_dirty(),this),this.add=(...t)=>{this.mark_as_dirty();for(let e of t)e instanceof h?this._monoms=this._monoms.concat(e.monoms):e instanceof s.Monom?this._monoms.push(e.clone()):Number.isSafeInteger(e)?this._monoms.push(new s.Monom(e.toString())):this._monoms.push(new s.Monom(e));return this.reduce()},this.subtract=(...t)=>{this.mark_as_dirty();for(let e of t)e instanceof h?this._monoms=this._monoms.concat(e.clone().opposed().monoms):e instanceof s.Monom?this._monoms.push(e.clone().opposed()):Number.isSafeInteger(e)?this._monoms.push(new s.Monom(e.toString()).opposed()):this._monoms.push(new s.Monom(e).opposed());return this.reduce()},this.multiply=t=>(this.mark_as_dirty(),t instanceof h?this.multiplyByPolynom(t):t instanceof r.Fraction?this.multiplyByFraction(t):t instanceof s.Monom?this.multiplyByMonom(t):Number.isSafeInteger(t)&&"number"==typeof t?this.multiplyByInteger(t):this),this.euclidian=t=>{if(void 0!==this.euclidianCache[t.tex])return this.euclidianCache[t.tex];const e=t.variables[0],i=(new h).zero(),s=this.clone().reorder(e);if(0===t.variables.length)return this.clone().divide(t),{quotient:this.clone().divide(t),reminder:(new h).zero()};const n=t.monomByDegree(void 0,e),o=t.degree(e);let r,a=this.degree(e).clone().multiply(2);for(;s.degree(e).geq(o)&&a.isPositive()&&(a.subtract(1),r=s.monomByDegree(void 0,e).clone().divide(n),!r.isZero());)i.add(r),s.subtract(t.clone().multiply(r));return i.reduce(),s.reduce(),{quotient:i,reminder:s}},this.divide=t=>(this.mark_as_dirty(),t instanceof r.Fraction?this.divideByFraction(t):"number"==typeof t&&Number.isSafeInteger(t)?this.divideByInteger(t):t instanceof h&&1===t.monoms.length&&0===t.variables.length?this.divideByFraction(t.monoms[0].coefficient):void 0),this.pow=t=>{if(this.mark_as_dirty(),!Number.isSafeInteger(t))return this.zero();if(t<0)return this.zero();if(0===t)return new h;const e=this.clone();for(let i=1;i<t;i++)this.multiply(e);return this.reduce()},this.compare=(t,e)=>{void 0===e&&(e="=");const i=this.clone().reduce().reorder(),s=t.clone().reduce().reorder();switch(e){case"=":if(i.length!==s.length||i.degree().isNotEqual(s.degree()))return!1;for(const t in i.monoms)if(!i.monoms[t].isEqual(s.monoms[t]))return!1;return!0;case"same":if(i.length!==s.length||i.degree()!==s.degree())return!1;for(const t in i.monoms)if(!i.monoms[t].isSameAs(s.monoms[t]))return!1;return!0;default:return!1}},this.isEqual=t=>this.compare(t,"="),this.isSameAs=t=>this.compare(t,"same"),this.isOpposedAt=t=>this.compare(t.clone().opposed(),"="),this.isFactorized=t=>{let e;if(t.match(/\(/g).length!==t.match(/\)/g).length)return!1;try{e=new h(t)}catch(t){return!1}if(!this.isEqual(e))return!1;let i=t.replaceAll("*",""),s=""+i,n=[];for(let t of i.matchAll(/\(([a-z0-9+\-]+)\)(\^[0-9]*)?/g)){if(void 0!==t[2])for(let e=0;e<+t[2].substr(1);e++)n.push(t[1]);else n.push(t[1]);s=s.replaceAll(t[0],"")}""!==s&&n.push(s);let o=n.map((t=>new h(t)));this.factorize();let r=1;for(let t of this.factors)for(let e=0;e<o.length;e++){if(t.isEqual(o[e])){o.splice(e,1);break}if(t.isOpposedAt(o[e])){o.splice(e,1),r=-r;break}}return 0===o.length&&1===r},this.isDeveloped=t=>{let e;if(t.match(/\(/g).length+t.match(/\)/g).length)return!1;try{e=new h(t)}catch(t){return!1}return!!this.isEqual(e)&&t.replaceAll("[*s]","")===e.reduce().reorder().display},this.reduce=()=>{for(let t=0;t<this._monoms.length;t++)for(let e=t+1;e<this._monoms.length;e++)this._monoms[t].isSameAs(this.monoms[e])&&(this._monoms[t].add(this.monoms[e]),this._monoms.splice(e,1));this._monoms=this._monoms.filter((t=>0!==t.coefficient.value));for(const t of this._monoms)t.coefficient.reduce();return 0===this.length?(new h).zero():this},this.reorder=(t="x")=>(this._monoms.sort((function(e,i){return i.degree(t).clone().subtract(e.degree(t)).value})),this.reduce()),this.degree=t=>{let e=(new r.Fraction).zero();for(const i of this._monoms)e=r.Fraction.max(i.degree(t).value,e);return e},this.letters=()=>{let t=new Set;for(let e of this._monoms)t=new Set([...t,...e.variables]);return[...t]},this.replaceBy=(t,e)=>{let i;this.mark_as_dirty();const s=(new h).zero();for(const n of this.monoms)void 0===n.literal[t]||n.literal[t].isZero()?s.add(n.clone()):(i=n.literal[t].clone(),delete n.literal[t],s.add(e.clone().pow(Math.abs(i.numerator)).multiply(n)));return this._monoms=s.reduce().reorder().monoms,this},this.evaluate=t=>{const e=(new r.Fraction).zero();return this._monoms.forEach((i=>{e.add(i.evaluate(t))})),e},this.derivative=t=>{let e=new h;for(let i of this._monoms)e.add(i.derivative(t));return e},this.primitive=t=>{let e=new h;for(let i of this._monoms)e.add(i.primitive(t));return e},this.integrate=(t,e,i)=>{const s=this.primitive(i);void 0===i&&(i="x");let n={},o={};return n[i]=new r.Fraction(t),o[i]=new r.Fraction(e),s.evaluate(o).subtract(s.evaluate(n))},this.factorize=t=>{if(this.dirty_factors){let e=[],i=this.clone().reorder(),s=i.commonMonom();if(!s.isOne()){let t=new h(s);e=[t.clone()],i=i.euclidian(t).quotient}let n=i.degree().clone().multiply(2).value,o=1;for(;n>=0;){if(n--,i.monoms.length<2){i.isOne()||(e.push(i.clone()),i.one());break}if(i.degree(t).isOne()){e.push(i.clone()),i.one();break}{let s=this._getAllPotentialFactors(i,o,t);for(o=i.degree(t).value;s.length>0;){let t=s[0];if(i.isDividableBy(t)){let n=i.euclidian(t);e.push(t),i=n.quotient.clone(),s=s.filter((t=>{let e=i.monoms[0],s=i.monoms[i.monoms.length-1],n=t.monoms[0],o=t.monoms[t.monoms.length-1];return!!s.isDivisible(o)&&!!e.isDivisible(n)}))}else s.shift()}}}i.isOne()||e.push(i.clone()),this._factors=e,this.dirty_factors=!1}return this._factors},this.isDividableBy=t=>{if(t.degree().isOne()){let e=t.getZeroes()[0];return e.exact instanceof r.Fraction&&this.evaluate(e.exact).isZero()}return this.euclidianCache[t.tex]=this.euclidian(t),this.euclidianCache[t.tex].reminder.isZero()},this.getZeroes=()=>{if(this.dirty_zeroes){let t=new a.Equation(this.clone(),0);t.solve(),this._zeroes=t.solutions,this.dirty_zeroes=!1}return this._zeroes},this.monomByDegree=(t,e)=>{if(void 0===t)return this.monomByDegree(this.degree(e),e);const i=this.clone().reduce();for(const s of i._monoms)if(s.degree(e).isEqual(t))return s.clone();return(new s.Monom).zero()},this.monomsByDegree=(t,e)=>{if(void 0===t)return this.monomsByDegree(this.degree(e));let i=[];const s=this.clone().reduce();for(const n of s._monoms)n.degree(e)===t&&i.push(n.clone());return i},this.monomByLetter=t=>{const e=this.clone().reduce();for(const i of e._monoms)if(i.hasLetter(t))return i.clone();return(new s.Monom).zero()},this.getDenominators=()=>{const t=[];for(const e of this._monoms)t.push(e.coefficient.denominator);return t},this.getNumerators=()=>{const t=[];for(const e of this._monoms)t.push(e.coefficient.numerator);return t},this.lcmDenominator=()=>o.Numeric.lcm(...this.getDenominators()),this.gcdDenominator=()=>o.Numeric.gcd(...this.getDenominators()),this.lcmNumerator=()=>o.Numeric.lcm(...this.getNumerators()),this.gcdNumerator=()=>o.Numeric.gcd(...this.getNumerators()),this.commonMonom=()=>{let t,e,i=(new s.Monom).one(),n=this.degree();t=this.gcdNumerator(),e=this.gcdDenominator(),i.coefficient=new r.Fraction(t,e);for(let t of this.variables){i.setLetter(t,n);for(let e of this._monoms)if(i.setLetter(t,r.Fraction.min(e.degree(t),i.degree(t))),i.degree(t).isZero())break}return i},this.limitToInfinity=t=>{const e=this.monomByDegree(void 0,t),i=e.coefficient.sign(),s=e.degree(t);return s.isStrictlyPositive()?1===i?(new r.Fraction).infinite():(new r.Fraction).infinite().opposed():s.isZero()?e.coefficient:(new r.Fraction).zero()},this.limitToNegativeInfinity=t=>{const e=this.monomByDegree(void 0,t),i=e.coefficient.sign(),s=e.degree(t);return s.isStrictlyPositive()?-1===i?(new r.Fraction).infinite():(new r.Fraction).infinite().opposed():s.isZero()?e.coefficient:(new r.Fraction).zero()},this._getAllPotentialFactors=(t,e,i)=>{let s=t.monoms[0].dividers,n=t.monoms[t.monoms.length-1].dividers,o=[];return s.forEach((t=>{t.degree(i).leq(e)&&n.forEach((e=>{t.degree(i).isNotEqual(e.degree(i))&&(o.push(new h(t,e)),o.push(new h(t,e.clone().opposed())))}))})),o},this.genDisplay=(t,e,i,s)=>{let n="";for(const i of this._monoms){if(0===i.coefficient.value)continue;let o;o=s?i.plotFunction:"tex"===t?i.tex:i.display,n+=`${1!==i.coefficient.sign()||""===n&&!0!==e?"":"+"}${o}`}return!0===i&&this.length>1&&(n="tex"===t?`\\left( ${n} \\right)`:`(${n})`),""===n&&(n="0"),n},this.shutingYardToReducedPolynom=t=>{const e=(new n.Shutingyard).parse(t).rpn;this.zero();let i=[];new s.Monom;for(const t of e)this.addToken(i,t);return 1===i.length&&this.add(i[0]),this},this.multiplyByPolynom=t=>{const e=[];for(const i of this._monoms)for(const n of t.monoms)e.push(s.Monom.xmultiply(i,n));return this._monoms=e,this.reduce()},this.multiplyByFraction=t=>{for(const e of this._monoms)e.coefficient.multiply(t);return this.reduce()},this.multiplyByInteger=t=>this.multiplyByFraction(new r.Fraction(t)),this.multiplyByMonom=t=>{for(const e of this._monoms)e.multiply(t);return this.reduce()},this.divideByInteger=t=>{const e=new r.Fraction(t);for(const t of this._monoms)t.coefficient.divide(e);return this},this.divideByFraction=t=>{for(const e of this._monoms)e.coefficient.divide(t);return this},this._factorize2ndDegree=t=>{let e,i,s,n,o,r,a,l,c;if(1===this.numberOfVars)return s=this.monomByDegree(2,t).coefficient,n=this.monomByDegree(1,t).coefficient,o=this.monomByDegree(0,t).coefficient,r=n.clone().pow(2).subtract(s.clone().multiply(o).multiply(4)),r.isZero()?(a=n.clone().opposed().divide(s.clone().multiply(2)),e=new h(t).subtract(a.display).multiply(a.denominator),i=new h(t).subtract(a.display).multiply(a.denominator),c=s.divide(a.denominator).divide(a.denominator),c.isOne()?[e,i]:[new h(c.display),e,i]):r.isPositive()&&r.isSquare()?(a=n.clone().opposed().add(r.clone().sqrt()).divide(s.clone().multiply(2)),l=n.clone().opposed().subtract(r.clone().sqrt()).divide(s.clone().multiply(2)),c=s.divide(a.denominator).divide(l.denominator),c.isOne()?[new h(t).subtract(a.display).multiply(a.denominator),new h(t).subtract(l.display).multiply(l.denominator)]:[new h(c.display),new h(t).subtract(a.display).multiply(a.denominator),new h(t).subtract(l.display).multiply(l.denominator)]):[this.clone()];if(s=this.monomByDegree(2,t),n=this.monomByDegree(1,t),o=this.monomByDegree(0,t),s.isLiteralSquare()&&o.isLiteralSquare()&&n.clone().pow(2).isSameAs(s.clone().multiply(o))){let t,e=new h("x",s.coefficient,n.coefficient,o.coefficient)._factorize2ndDegree("x"),i=[];if(e.length>=2){for(let n of e)n.degree().isZero()?i.push(n.clone()):(t=n.clone(),t.monoms[0].literal=s.literalSqrt,t.monoms[1].literal=o.literalSqrt,i.push(t.clone()));return i}}return[this.clone()]},this._factorizeByGroups=()=>[],this._monoms=[],this._factors=[],this.mark_as_dirty(),void 0!==t&&this.parse(t,...e),this}get euclidianCache(){return this._euclidianCache}set euclidianCache(t){this._euclidianCache=t}get dirty_zeroes(){return this._dirty_zeroes}set dirty_zeroes(t){this._dirty_zeroes=t}get dirty_factors(){return this._dirty_factors}set dirty_factors(t){this._dirty_factors=t}get monoms(){return this._monoms}set monoms(t){this._monoms=t}get zeroes(){return this.getZeroes()}get factors(){return this.factorize()}set factors(t){this.mark_as_dirty(),this._factors=t}get texString(){return this._texString}get texFactors(){if(this.factorize(),0===this.factors.length)return this.tex;let t="";for(let e of this.factors)e.monoms.length>1?t+=`(${e.tex})`:t=e.tex+t;return t}get length(){return this._monoms.length}get display(){return this.genDisplay()}get raw(){return this._rawString}get tex(){return this.genDisplay("tex")}get isMultiVariable(){for(const t of this._monoms)if(t.variables.length>1)return!0;return!1}get variables(){let t=[];for(const e of this._monoms)t=t.concat(e.variables);return t=[...new Set(t)],t}get numberOfVars(){return this.variables.length}get plotFunction(){return this.genDisplay("tex",!1,!1,!0)}isZero(){return 1===this._monoms.length&&this._monoms[0].coefficient.isZero()||0===this._monoms.length}isOne(){return 1===this._monoms.length&&this._monoms[0].coefficient.isOne()}_parseString(t,...e){if(void 0===e||0===e.length){if(t=""+t,this._rawString=t,""!==t&&!isNaN(Number(t))){this.empty();let e=new s.Monom(t);return this.add(e),this}return this.shutingYardToReducedPolynom(t)}if(/^[a-z]/.test(t)){this.empty();let i=e.map((t=>new r.Fraction(t)));if(t.length>1){let e=t.split(""),n=0;for(let t of i){let i=new s.Monom;i.coefficient=t.clone(),i.literalStr=e[n]||"",this.add(i),n++}}else{let e=i.length-1;for(let n of i){let i=new s.Monom;i.coefficient=n.clone(),i.literalStr=`${t}^${e}`,this.add(i),e--}}return this}return this.zero()}}e.Polynom=h},107:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Rational=void 0;const s=i(38),n=i(506),o=i(760);class r{constructor(t,e){this.clone=()=>new r(this._numerator.clone(),this._denominator.clone()),this.domain=()=>{let t=this._denominator.getZeroes();return 0===t.length||t[0].tex===o.PARTICULAR_SOLUTION.real?o.PARTICULAR_SOLUTION.varnothing:t[0].tex===o.PARTICULAR_SOLUTION.varnothing?o.PARTICULAR_SOLUTION.real:"\\mathbb{R}\\setminus\\left\\{"+t.map((t=>t.tex)).join(";")+"\\right\\}"},this.amplify=t=>(this._numerator.multiply(t),this._denominator.multiply(t),this),this.derivative=t=>{let e=this._numerator.clone(),i=this._denominator.clone(),s=e.clone().derivative(t),n=i.clone().derivative(t);return this._numerator=s.clone().multiply(i).subtract(e.clone().multiply(n)),this._denominator=i.clone().pow(2),this},this.simplify=t=>{let e=this._numerator.euclidian(t);if(!e.reminder.isZero())return this;let i=this._denominator.euclidian(t);return i.reminder.isZero()?(this._numerator=e.quotient,this._denominator=i.quotient,this):this},this.reduce=()=>{this._numerator.factorize();for(let t of this._numerator.factors)this.simplify(t);return this},this.opposed=()=>(this._numerator.opposed(),this),this.add=t=>{let e=this._denominator.clone();return this.amplify(t._denominator),this._numerator.add(t._numerator.clone().multiply(e)),this},this.subtract=t=>this.add(t.clone().opposed()),this.euclidian=()=>this._numerator.euclidian(this._denominator),this.limits=(t,e,i)=>{if(t===1/0||t===-1/0){let{quotient:e,reminder:s}=this._numerator.clone().euclidian(this._denominator);return e.degree(i).isStrictlyPositive()?t===1/0?e.limitToInfinity(i):e.limitToNegativeInfinity(i):e.monomByDegree(void 0,i).coefficient}{let s,o,r={},a={},h=this.clone().reduce();return r[void 0===i?"x":i]=new n.Fraction(t),"above"!==e&&"below"!==e?(s=h._numerator.evaluate(r).divide(h._denominator.evaluate(r)),s.isInfinity()?s.abs():s):("above"===e?a[void 0===i?"x":i]=new n.Fraction(t).add(1e-6):"below"===e&&(a[void 0===i?"x":i]=new n.Fraction(t).subtract(1e-6)),s=h._numerator.evaluate(r).divide(h._denominator.evaluate(r)),o=h._numerator.evaluate(a).divide(h._denominator.evaluate(a)).sign(),s.isInfinity()?1===o?s.abs():s.abs().opposed():s)}},this.evaluate=t=>{(new n.Fraction).zero();let e=this._numerator.evaluate(t),i=this._denominator.evaluate(t);return e.divide(i)},t instanceof s.Polynom?this._numerator=t.clone():this._numerator="string"==typeof t?new s.Polynom(t):new s.Polynom,e instanceof s.Polynom?this._denominator=e.clone():this._denominator="string"==typeof e?new s.Polynom(e):new s.Polynom}get numerator(){return this._numerator}get denominator(){return this._denominator}get tex(){return`\\frac{ ${this._numerator.tex} }{ ${this._denominator.tex} }`}get texFactors(){return`\\frac{ ${this._numerator.texFactors} }{ ${this._denominator.texFactors} }`}get plotFunction(){return`(${this._numerator.plotFunction})/(${this._denominator.plotFunction})`}}e.Rational=r},506:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Fraction=void 0;const s=i(956);class n{constructor(t,e){return this.parse=(t,e)=>{let i;if(null===t||""===t)return this._numerator=0,this._denominator=1,this;switch(typeof t){case"string":if(i=t.split("/"),i.length>2)throw"Two many divide signs";if(i.map((t=>""===t||isNaN(Number(t)))).includes(!0))throw"Not a number";if(1===i.length)return this.parse(+i[0]);2===i.length?"0"===i[1]?(this._numerator=NaN,this._denominator=1):(this._numerator=+i[0],this._denominator=+i[1]):(this._numerator=NaN,this._denominator=1);break;case"number":if(Number.isSafeInteger(t))this._numerator=+t,void 0!==e&&Number.isSafeInteger(e)?this._denominator=+e:this._denominator=1;else{let i=t.toString().split(".")[1].length;void 0===e?(this._numerator=t*Math.pow(10,i),this._denominator=Math.pow(10,i)):Number.isSafeInteger(e)&&(this._numerator=t*Math.pow(10,i)-Math.floor(t*Math.pow(10,i-e)),this.denominator=Math.pow(10,i)-Math.pow(10,i-e)),this.reduce()}break;case"object":t instanceof n&&(this._numerator=+t.numerator,this._denominator=+t.denominator)}return this},this.clone=()=>{let t=new n;return t.numerator=+this._numerator,t.denominator=+this._denominator,t},this.zero=()=>(this._numerator=0,this._denominator=1,this),this.one=()=>(this._numerator=1,this._denominator=1,this),this.infinite=()=>(this._numerator=1/0,this._denominator=1,this),this.invalid=()=>(this._numerator=NaN,this._denominator=1,this),this.opposed=()=>(this._numerator=-this._numerator,this),this.add=t=>{if(!(t instanceof n))return this.add(new n(t));{let e=this._numerator,i=this._denominator;this._numerator=e*t.denominator+t.numerator*i,this._denominator=i*t.denominator}return this.reduce()},this.subtract=t=>t instanceof n?this.add(t.clone().opposed()):this.add(-t),this.multiply=t=>{let e=new n(t);return this._numerator=this._numerator*e.numerator,this._denominator=this._denominator*e.denominator,this.reduce()},this.divide=t=>{let e=new n(t);if(0===e.numerator)return(new n).infinite();let i=+this._numerator,s=+this._denominator;return this._numerator=i*e.denominator,this._denominator=s*e.numerator,this.reduce()},this.invert=()=>{let t=+this._numerator,e=+this._denominator;return this._numerator=e,this._denominator=t,this},this.pow=t=>{if(t instanceof n)return this.pow(t.value);this.reduce(),t<0&&this.invert();let e=Math.floor(Math.pow(this._numerator,Math.abs(t)));return Math.floor(Math.pow(this._denominator,Math.abs(t))),e**Math.abs(t)===this._numerator&&(Math.abs(t),this._denominator),this._numerator=this._numerator**Math.abs(t),this._denominator=this._denominator**Math.abs(t),this},this.root=t=>(0===t||(t<0&&this.invert(),Math.pow(this._numerator,Math.abs(1/t)),Math.pow(this._denominator,Math.abs(1/t)),this._numerator=Math.pow(this._numerator,Math.abs(1/t)),this._denominator=Math.pow(this._denominator,Math.abs(1/t))),this),this.sqrt=()=>this.root(2),this.abs=()=>(this._numerator=Math.abs(this._numerator),this._denominator=Math.abs(this._denominator),this),this.reduce=()=>{let t=s.Numeric.gcd(this._numerator,this._denominator);return this._numerator=this._numerator/t,this._denominator=this._denominator/t,this._denominator<0&&(this._denominator=-this._denominator,this._numerator=-this._numerator),this},this.amplify=t=>(Number.isSafeInteger(t)&&(this._numerator*=t,this._denominator*=t),this),this.compare=(t,e)=>{let i;switch(void 0===e&&(e="="),i=t instanceof n?t.clone():new n(t),e){case">":return this.value>i.value;case">=":return this.value>=i.value;case"<":return this.value<i.value;case"<=":return this.value<=i.value;case"=":return this.value===i.value;case"<>":return this.value!==i.value;default:return!1}},this.lesser=t=>this.compare(t,"<"),this.leq=t=>this.compare(t,"<="),this.greater=t=>this.compare(t,">"),this.geq=t=>this.compare(t,">="),this.isEqual=t=>this.compare(t,"="),this.isNotEqual=t=>this.compare(t,"<>"),this.isOpposed=t=>this.isEqual(t.clone().opposed()),this.isInverted=t=>this.isEqual((new n).one().divide(t.clone())),this.isZero=()=>0===this._numerator,this.isNotZero=()=>0!==this._numerator,this.isOne=()=>1===this._numerator&&1===this._denominator,this.isNegativeOne=()=>-1===this._numerator&&1===this._denominator,this.isPositive=()=>1===this.sign(),this.isNegative=()=>-1===this.sign(),this.isStrictlyPositive=()=>this.value>0,this.isStrictlyNegative=()=>this.value<0,this.isNaN=()=>isNaN(this._numerator),this.isInfinity=()=>Math.abs(this._numerator)===1/0,this.isFinite=()=>!this.isInfinity()&&!this.isNaN(),this.isSquare=()=>Math.sqrt(this._numerator)%1==0&&Math.sqrt(this._denominator)%1==0,this.isReduced=()=>1===Math.abs(s.Numeric.gcd(this._numerator,this._denominator)),this.isNatural=()=>this.isRelative()&&this.isPositive(),this.isRelative=()=>1===this.clone().reduce().denominator,this.isRational=()=>!this.isRelative(),this.isEven=()=>this.isRelative()&&this.value%2==0,this.isOdd=()=>this.isRelative()&&this.value%2==1,this.sign=()=>this._numerator*this._denominator>=0?1:-1,this.areEquals=(...t)=>{for(let e=0;e<t.length;e++)if(!this.isEqual(t[e]))return!1;return!0},this._numerator=1,this._denominator=1,void 0!==t&&this.parse(t,e),this}get numerator(){return this._numerator}set numerator(t){this._numerator=t}get denominator(){return this._denominator}set denominator(t){this._denominator=t}get value(){return this._numerator/this._denominator}get tex(){return this.isInfinity()?(1===this.sign()?"+":"-")+"\\infty":1===this._denominator?`${this._numerator}`:this._numerator<0?`-\\frac{ ${-this._numerator} }{ ${this._denominator} }`:`\\frac{ ${this._numerator} }{ ${this._denominator} }`}get display(){return 1===this._denominator?`${this._numerator}`:`${this._numerator}/${this._denominator}`}get frac(){return this.tex}get dfrac(){return this.tex.replace("\\frac","\\dfrac")}get tfrac(){return this.tex.replace("\\frac","\\tfrac")}}e.Fraction=n,n.max=(...t)=>{let e=new n(t[0]);for(let i of t){let t=new n(i);t.greater(e)&&(e=t.clone())}return e},n.min=(...t)=>{let e=new n(t[0]);for(let i of t){let t=new n(i);t.lesser(e)&&(e=t.clone())}return e},n.average=(...t)=>{let e=(new n).zero();for(let i of t)e.add(i);return e.divide(t.length),e},n.unique=(t,e)=>{let i={},s=[];return t.forEach((t=>{i[t.clone().reduce().tex]||(s.push(t.clone()),i[t.tex]=!0)})),e?n.sort(s):s},n.sort=(t,e)=>{let i=t.sort(((t,e)=>t.value-e.value));return e&&i.reverse(),i}},872:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NthRoot=void 0,e.NthRoot=class{constructor(...t){this.parse=(t,e,i)=>(this._coefficient=void 0===i?1:i,this._nth=void 0===e?2:e,this._radical=void 0===t?1:t,this._nth%2==0&&this._radical<0&&(this._isValid=!1),this),this.reduce=()=>{let t=Math.floor(Math.pow(this._radical,1/this._nth));for(;t>1;)this._radical%Math.pow(t,this._nth)!=0?t--:(this._coefficient*=t,this._radical=this._radical/Math.pow(t,this._nth),t=Math.floor(Math.pow(this._radical,1/this._nth)));return this},this.multiply=t=>(this._radical*=t.radical,this.reduce()),this.hasRadical=()=>!(1===this._radical||0===this._radical||!1===this._isValid),this._radical=1,this._coefficient=1,this._nth=2,this._isValid=!0,void 0!==t&&this.parse(t[0],t[1],t[2])}get radical(){return this._radical}set radical(t){this._radical=t}get nth(){return this._nth}set nth(t){Number.isSafeInteger(t)&&t>=2?this._nth=t:(console.log("Error setting the nth root"),this._nth=2)}get coefficient(){return this._coefficient}set coefficient(t){this._coefficient=t}get tex(){let t;return t=1===this._coefficient?"":-1===this._coefficient?"-":this._coefficient.toString(),1===this._radical?`${this._coefficient}`:2===this._nth?`${t}\\sqrt{${this._radical}}`:`${t}\\sqrt[${this._nth}]{${this._radical}}`}get value(){return this._coefficient*Math.pow(this._radical,1/this._nth)}}},735:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.NumExp=void 0;const s=i(505),n=i(506);e.NumExp=class{constructor(t,e){this._expression=t,this._rpn=new s.Shutingyard(s.ShutingyardMode.NUMERIC).parse(t).rpn}get rpn(){return this._rpn}get isValid(){return void 0===this._isValid&&this.evaluate({x:0}),this._isValid}set isValid(t){this._isValid=t}get expression(){return this._expression}_extractDecimalPart(t){let e=t.toString();return e.includes(".")?(e=e.split(".")[1],e.substring(0,e.length-2)):""}_numberCorrection(t){const e=1e-14,i=this._extractDecimalPart(t);if(""===i)return t;const s=i.match(/9+$/g),n=i.match(/0+$/g);if(s&&s[0].length>=6){const i=this._extractDecimalPart(t+e).match(/0+$/g);if(i&&i[0].length>=6)return+(t+e).toString().split(i[0])[0]}if(n&&n[0].length>=6){const i=this._extractDecimalPart(t-e).match(/9+$/g);if(i&&i[0].length>=6)return+t.toString().split(n[0])[0]}return t}_addToStack(t,e){t.push(this._numberCorrection(e))}evaluate(t){const e=[];this.isValid=!0;for(const i of this._rpn)if(i.tokenType===s.ShutingyardType.COEFFICIENT)isNaN(+i.token)?this._addToStack(e,new n.Fraction(i.token).value):this._addToStack(e,+i.token);else if(i.tokenType===s.ShutingyardType.VARIABLE)void 0!==t[i.token]&&this._addToStack(e,+t[i.token]);else if(i.tokenType===s.ShutingyardType.CONSTANT)this._addToStack(e,s.tokenConstant[i.token]);else if(i.tokenType===s.ShutingyardType.OPERATION){if("*"===i.token){const t=e.pop(),i=e.pop();void 0!==i&&void 0!==t||(this.isValid=!1),this._addToStack(e,i*t)}else if("/"===i.token){const t=e.pop(),i=e.pop();void 0!==i&&void 0!==t||(this.isValid=!1),this._addToStack(e,i/t)}else if("+"===i.token){const t=e.pop(),i=e.pop();void 0!==i&&void 0!==t||(this.isValid=!1),this._addToStack(e,+i+ +t)}else if("-"===i.token){const t=e.pop(),i=e.pop()||0;void 0===t&&(this.isValid=!1),this._addToStack(e,i-t)}else if("^"===i.token){const t=e.pop(),i=e.pop();void 0!==i&&void 0!==t||(this.isValid=!1),this._addToStack(e,Math.pow(i,t))}}else if(i.tokenType===s.ShutingyardType.FUNCTION){const t=e.pop();void 0===t&&(this.isValid=!1),"sin"===i.token?this._addToStack(e,Math.sin(t)):"cos"===i.token?this._addToStack(e,Math.cos(t)):"tan"===i.token?this._addToStack(e,Math.tan(t)):"sqrt"===i.token&&this._addToStack(e,Math.sqrt(t))}if(1===e.length)return e[0];throw`There was a problem parsing: ${this._expression}`}}},75:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PolynomExpProduct=e.PolynomExpFactor=void 0;const s=i(38),n=i(506);class o{constructor(t,e,i){this._polynom=new s.Polynom(t),this._degree=new n.Fraction(void 0===e?1:e),this._fn=i,this._powerAsInteger=!0,this._forceParenthesis=!0}get forceParenthesis(){return this._forceParenthesis}set forceParenthesis(t){this._forceParenthesis=t}get fn(){return this._fn}set fn(t){this._fn=t}get powerAsInteger(){return this._powerAsInteger}set powerAsInteger(t){this._powerAsInteger=t}get polynom(){return this._polynom}set polynom(t){this._polynom=t}get degree(){return this._degree}set degree(t){this._degree=t}get tex(){let t;return t=!this._degree.isOne()||void 0===this._fn&&this._forceParenthesis?this._powerAsInteger&&!this._degree.isRelative()?`\\sqrt${2!==this._degree.denominator?`[ ${this._degree.denominator} ]`:""}{ ${this._polynom.tex} }^{ ${this._degree.numerator} }`:this.isCoefficient&&this.firstCoefficient.isNatural()?this._polynom.tex+this._texDegree:`\\left( ${this._polynom.tex} \\right)${this._texDegree}`:this._polynom.tex,void 0!==this._fn&&void 0!==this._fn.tex&&(t=`${this._fn.tex}\\left( ${t} \\right)`),t}get isCoefficient(){return this._polynom.degree().isZero()}get firstCoefficient(){return this._polynom.monomByDegree().coefficient}get _texDegree(){return this._degree.isOne()?"":`^{ ${this._degree.tfrac} }`}setForceParenthesis(t){return this._forceParenthesis=void 0===t||t,this}derivative(t){return this._degree.isOne()?new r(new o(this._polynom.clone().derivative(t))):new r(new o(this._degree.clone()),new o(this._polynom.clone().derivative(t)),new o(this._polynom.clone(),this._degree.clone().subtract(1)))}}e.PolynomExpFactor=o;class r{constructor(...t){this._factors=t||[],this._positive=!0,this._asPositiveDegree=!0}get fn(){return this._fn}set fn(t){this._fn=t}get factors(){return this._factors}set factors(t){this._factors=t}get positive(){return this._positive}set positive(t){this._positive=t}get asPositiveDegree(){return this._asPositiveDegree}set asPositiveDegree(t){this._asPositiveDegree=t}get tex(){let t=this._factors.length>1,e=this._factors.map((e=>e.setForceParenthesis(t).tex)).join(" \\cdot ");if(this._asPositiveDegree){const i=this._factors.filter((t=>t.degree.isPositive())),s=this._factors.filter((t=>t.degree.isNegative()));let n,o;s.length>0&&(0===i.length?n=[1]:1===i.length?n=[i[0].setForceParenthesis(!1).tex]:(t=i.length>1,n=i.map((e=>e.setForceParenthesis(t).tex))),s.map((t=>t.degree.opposed())),1===s.length?o=[s[0].setForceParenthesis(!1).tex]:(t=s.length>1,o=s.map((e=>e.setForceParenthesis(t).tex))),s.map((t=>t.degree.opposed())),e=`\\frac{ ${n.join(" \\cdot ")} }{ ${o.join(" \\cdot ")} }`)}return void 0!==this._fn&&void 0!==this._fn.name&&""!==this._fn.name&&(e=`${this._fn.tex}\\left( ${e} \\right)`),e}reduce(){let t=this._factors.filter((t=>t.isCoefficient)),e=this._factors.filter((t=>!t.isCoefficient)),i=(new n.Fraction).one();if(t.length>1)for(const e of t)e.degree.isPositive()?i.multiply(e.polynom.monoms[0].coefficient.pow(e.degree)):i.divide(e.polynom.monoms[0].coefficient.pow(e.degree.clone().abs()));else 1===t.length&&(i=t[0].polynom.monoms[0].coefficient);return i.isOne()?this._factors=[...e]:i.isRelative()?this._factors=[new o(i),...e]:this._factors=[new o(i.numerator),new o(i.denominator,-1),...e],this}integrate(t){if(2===this._factors.length){let e=this._factors[0].polynom.degree(t).value,i=this._factors[1].polynom.degree(t).value;if(e===i+1)return this._integrateWithInternalDerivative(this._factors[0],this._factors[1],t);if(e+1===i)return this._integrateWithInternalDerivative(this._factors[1],this._factors[0],t)}}applyMathFunction(t){return this._fn=t,this}_integrateWithInternalDerivative(t,e,i){let s=t.polynom.clone().derivative(i),{quotient:n,reminder:a}=e.polynom.clone().euclidian(s);if(a.isZero()&&n.degree(i).isZero())return t.degree.isEqual(-1)?new r(new o(n,1),new o(t.polynom.clone(),1,{name:"ln",tex:"\\ln",fn:t=>Math.log(t)})):new r(new o(t.degree.clone().add(1).invert(),1),new o(n,1),new o(t.polynom.clone(),t.degree.clone().add(1)))}}e.PolynomExpProduct=r},699:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Circle=void 0;const s=i(557),n=i(9),o=i(586),r=i(164),a=i(956),h=i(506),l=i(760),c=i(38);class u{constructor(...t){this.relativePosition=t=>{let e=t.distanceTo(this.center),i=Math.sqrt(this._squareRadius.value);return e.value-i>1e-10?0:Math.abs(e.value-i)<1e-10?1:2},this.lineIntersection=t=>{let e,i=[];if(null===this._cartesian)return[];const n=this._cartesian.clone(),o=t.equation.clone().isolate("x"),r=t.equation.clone().isolate("y");if(o instanceof l.Equation&&r instanceof l.Equation){n.replaceBy("y",r.right).simplify(),n.solve();for(let t of n.solutions)!1===t.exact&&isNaN(t.value)||(e=new h.Fraction(!1===t.exact?t.value:t.exact),i.push(new s.Point(e.clone(),r.right.evaluate(e))))}return i},this.tangents=t=>t instanceof h.Fraction?this._tangentsWithSlope(t):this.isPointOnCircle(t)?this._tangentsThroughOnePointOnTheCircle(t):this.center.distanceTo(t).value>this.radius.value?this._tangentsThroughOnePointOutsideTheCircle(t):(console.log("No tangents as the point is inside !"),[]),this.isPointOnCircle=t=>this._cartesian.test({x:t.x,y:t.y}),this.getPointsOnCircle=t=>{void 0===t&&(t=!1);let e,i=a.Numeric.pythagoricianTripletsWithTarget(this._squareRadius.value,!0),n=[];return i.forEach((t=>{for(let i of[[1,1],[-1,1],[-1,-1],[1,-1]])e=new s.Point(this.center.x.clone().add(i[0]*t[0]),this.center.y.clone().add(i[1]*t[1])),e.isInListOfPoints(n)||n.push(e)})),n},this._tangentsThroughOnePointOnTheCircle=t=>{let e=new o.Vector(this._center,t);return[new n.Line(t,e,n.LinePropriety.Perpendicular)]},this._tangentsThroughOnePointOutsideTheCircle=t=>{let e=this.center.x.clone().subtract(t.x),i=this.center.y.clone().subtract(t.y),s=new c.Polynom("x"),o=new c.Polynom("x^2+1");s.multiply(e).subtract(i).pow(2),o.multiply(this.squareRadius);let r=new l.Equation(s,o);return r.moveLeft().simplify().solve(),r.solutions.map((e=>{let i,s=new l.Equation("y","x");return e.exact instanceof h.Fraction?(i=t.x.clone().opposed().multiply(e.exact).add(t.y),s.right.multiply(e.exact).add(i)):(i=t.x.clone().opposed().multiply(e.value).add(t.y),s.right.multiply(e.value).add(i)),new n.Line(s)}))},this._tangentsWithSlope=t=>{const e=t.numerator,i=-t.denominator,s=this._center.x.clone(),o=this._center.y.clone();this._squareRadius;let r=this._squareRadius.clone().multiply(t.numerator**2+t.denominator**2),a=s.clone().multiply(e).opposed().subtract(o.clone().multiply(i)).add(r.clone().sqrt()),h=s.clone().multiply(e).opposed().subtract(o.clone().multiply(i)).subtract(r.clone().sqrt());return[new n.Line(e,i,a),new n.Line(e,i,h)]},this._exists=!1,void 0!==t&&this.parse(...t)}get center(){return this._center}get squareRadius(){return this._squareRadius}get cartesian(){return this._cartesian}get exists(){return this._exists}get radius(){return this._squareRadius.isSquare()?{tex:this._squareRadius.clone().sqrt().tex,display:this._squareRadius.clone().sqrt().display,value:this._squareRadius.clone().sqrt().value}:{tex:`\\sqrt{${this._squareRadius.tex}}`,display:`sqrt(${this._squareRadius.display})`,value:this._squareRadius.clone().sqrt().value}}get tex(){if(this._exists){let t,e;return t=this._center.x.isZero()?"x^2":`\\left(x${this._center.x.isNegative()?"+":"-"}${this._center.x.clone().abs().tex}\\right)^2`,e=this._center.y.isZero()?"y^2":`\\left(y${this._center.y.isNegative()?"+":"-"}${this._center.y.clone().abs().tex}\\right)^2`,`${t}+${e}=${this._squareRadius.tex}`}return"\\text{le cercle n'existe pas.}"}get developed(){return this._cartesian.tex}get display(){return this._cartesian.display}clone(){return this._center=this._center.clone(),this._squareRadius=this._squareRadius.clone(),this._calculateCartesian(),this}_reset(){return this._center=null,this._squareRadius=null,this._cartesian=null,this._exists=!1,this}parse(...t){return this._reset(),"string"==typeof t[0]?this._parseEquation(new l.Equation(t[0])):t[0]instanceof l.Equation?this._parseEquation(t[0]):t[0]instanceof u?this._parseCopyCircle(t[0]):t[0]instanceof s.Point&&t.length>1&&(t[1]instanceof s.Point?t[2]instanceof s.Point?this._parseThroughtThreePoints(t[0],t[1],t[2]):this._parseCenterAndPointThrough(t[0],t[1]):(t[1]instanceof h.Fraction||"number"==typeof t[1])&&this._parseCenterAndRadius(t[0],t[1],"boolean"==typeof t[2]&&t[2])),this._exists&&(this._calculateCartesian(),void 0!==this._squareRadius&&this._squareRadius.isNegative()&&(this._exists=!1)),this}_calculateCartesian(){this._cartesian=new l.Equation(new c.Polynom(`(x-(${this._center.x.display}))^2+(y-(${this._center.y.display}))^2`),new c.Polynom(`${this._squareRadius.display}`)).moveLeft()}_parseCopyCircle(t){return this._center=t.center.clone(),this._squareRadius=t.squareRadius.clone(),this._calculateCartesian(),this._exists=t.exists,this}_parseCenterAndRadius(t,e,i){return this._center=t.clone(),this._squareRadius=i?new h.Fraction(e):new h.Fraction(e).pow(2),this._exists=!0,this}_parseCenterAndPointThrough(t,e){return this._center=t.clone(),this._squareRadius=new o.Vector(this._center,e).normSquare,this._exists=!0,this}_parseEquation(t){if(this._exists=!1,t.moveLeft(),2===t.degree("x").value&&2===t.degree("y").value){let e,i,n,o=t.left.monomByDegree(2,"x"),r=t.left.monomByDegree(2,"y");o.coefficient.isEqual(r.coefficient)?(t.divide(o.coefficient),e=t.left.monomByDegree(1,"x"),i=t.left.monomByDegree(1,"y"),n=t.left.monomByDegree(0),this._center=new s.Point(e.coefficient.clone().divide(2).opposed(),i.coefficient.clone().divide(2).opposed()),this._squareRadius=n.coefficient.clone().opposed().add(this._center.x.clone().pow(2)).add(this._center.y.clone().pow(2)),this._calculateCartesian(),this._exists=!0):(this._center=null,this._squareRadius=null,this._exists=!1)}return this}_parseThroughtThreePoints(t,e,i){let s=new r.Triangle(t,e,i),n=s.remarquables.mediators.AB.clone(),o=s.remarquables.mediators.AC.clone();return this.parse(n.intersection(o).point,t),this}}e.Circle=u},9:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Line=e.LinePropriety=void 0;const s=i(586),n=i(557),o=i(956),r=i(506),a=i(760),h=i(38);var l;!function(t){t[t.None=0]="None",t.Parallel="parallel",t.Perpendicular="perpendicular",t.Tangent="tangent"}(l=e.LinePropriety||(e.LinePropriety={}));class c{constructor(...t){return this.parse=(...t)=>{if(this._exists=!1,0===t.length)return this;if(1===t.length){if(t[0]instanceof c)return t[0].clone();if(t[0]instanceof a.Equation)return this.parseEquation(t[0]);if("string"==typeof t[0])try{let e=new a.Equation(t[0]);return this.parse(e)}catch(t){return this}}if(2===t.length){if(t[0]instanceof n.Point&&t[1]instanceof s.Vector)return this.parseByPointAndVector(t[0],t[1]);if(t[0]instanceof n.Point&&t[1]instanceof n.Point)return this.parseByPointAndVector(t[0],new s.Vector(t[0],t[1]));if(t[0]instanceof s.Vector&&t[1]instanceof n.Point)return this.parseByPointAndNormal(t[1],t[0])}if(3===t.length){if((t[0]instanceof r.Fraction||"number"==typeof t[0])&&(t[1]instanceof r.Fraction||"number"==typeof t[1])&&(t[2]instanceof r.Fraction||"number"==typeof t[2]))return this.parseByCoefficient(t[0],t[1],t[2]);if(t[0]instanceof n.Point&&t[1]instanceof s.Vector){if(t[2]===l.Perpendicular)return this.parseByPointAndNormal(t[0],t[1]);if(t[2]===l.Parallel)return this.parseByPointAndVector(t[0],t[1])}else if(t[0]instanceof n.Point&&t[1]instanceof c)return t[2]===l.Parallel||null===t[2]?this.parseByPointAndLine(t[0],t[1],l.Parallel):this.parseByPointAndLine(t[0],t[1],l.Perpendicular)}return console.log("Someting wrong happend while creating the line"),this},this.parseEquation=t=>{t.reorder(!0);let e=new Set(t.letters());if(!e.has("x")&&!e.has("y"))return this;for(let t of["x","y"])e.has(t)&&e.delete(t);return e.size>0?this:this.parseByCoefficient(t.left.monomByLetter("x").coefficient,t.left.monomByLetter("y").coefficient,t.left.monomByDegree(0).coefficient)},this.parseByCoefficient=(t,e,i)=>(this._a=new r.Fraction(t),this._b=new r.Fraction(e),this._c=new r.Fraction(i),this._d=new s.Vector(this._b.clone(),this._a.clone().opposed()),this._OA=new n.Point((new r.Fraction).zero(),this._c.clone()),this._n=this._d.clone().normal(),this._exists=!0,this),this.parseByPointAndVector=(t,e)=>(this.parseByCoefficient(e.y,e.x.clone().opposed(),t.x.clone().multiply(e.y).subtract(t.y.clone().multiply(e.x)).opposed()),this._OA=t.clone(),this._d=e.clone(),this._n=this._d.clone().normal(),this._exists=!0,this),this.parseByPointAndNormal=(t,e)=>this.parseByCoefficient(e.x,e.y,t.x.clone().multiply(e.x).add(t.y.clone().multiply(e.y)).opposed()),this.parseByPointAndLine=(t,e,i)=>(void 0===i&&(i=l.Parallel),i===l.Parallel?this.parseByPointAndNormal(t,e.normal):i===l.Perpendicular?this.parseByPointAndNormal(t,e.director):(this._exists=!1,this)),this.clone=()=>(this._a=this._a.clone(),this._b=this._b.clone(),this._c=this._c.clone(),this._d=this._d.clone(),this._OA=this._OA.clone(),this._n=this._n.clone(),this._exists=this.exists,this),this.isParellelTo=t=>this.slope.isEqual(t.slope)&&this.height.isNotEqual(t.height),this.isSameAs=t=>this.slope.isEqual(t.slope)&&this.height.isEqual(t.height),this.isVertical=()=>this.slope.isInfinity(),this.simplify=()=>{let t=o.Numeric.lcm(this._a.denominator,this._b.denominator,this._c.denominator),e=o.Numeric.gcd(this._a.numerator,this._b.numerator,this._c.numerator);return this.parseByCoefficient(this._a.clone().multiply(t).divide(e),this._b.clone().multiply(t).divide(e),this._c.clone().multiply(t).divide(e)),this},this.simplifyDirection=()=>{let t=o.Numeric.lcm(this._d.x.denominator,this._d.y.denominator),e=o.Numeric.gcd(this._d.x.numerator,this._d.y.numerator);return this._d.x.multiply(t).divide(e),this._d.y.multiply(t).divide(e),this},this.intersection=t=>{let e=new n.Point,i=!1,s=!1;return this._b.isZero()||t.b.isZero(),this.isParellelTo(t)?(e.x=null,e.y=null,i=!0):this.isSameAs(t)?(e.x=null,e.y=null,s=!0):(e.x=this._b.clone().multiply(t.c).subtract(this._c.clone().multiply(t.b)).divide(this._a.clone().multiply(t.b).subtract(this._b.clone().multiply(t.a))),e.y=this._a.clone().multiply(t.c).subtract(this._c.clone().multiply(t.a)).divide(this._b.clone().multiply(t.a).subtract(this._a.clone().multiply(t.b)))),{point:e,hasIntersection:!(i||s),isParallel:i,isSame:s}},this.getValueAtX=t=>{const e=this.equation.clone().isolate("y"),i=new r.Fraction(t);if(e instanceof a.Equation)return e.right.evaluate({x:i})},this.getValueAtY=t=>{const e=this.equation.clone().isolate("x"),i=new r.Fraction(t);if(e instanceof a.Equation)return e.right.evaluate({y:i})},this._exists=!1,t.length>0&&this.parse(...t),this}get exists(){return this._exists}get equation(){return new a.Equation((new h.Polynom).parse("xy",this._a,this._b,this._c),new h.Polynom("0")).simplify()}get tex(){let t=this.equation;return this._a.isNegative()&&t.multiply(-1),{canonical:t.tex,mxh:this.slope.isInfinity()?"x="+this.OA.x.tex:"y="+(new h.Polynom).parse("x",this.slope,this.height).tex,parametric:`${n.Point.pmatrix("x","y")} = ${n.Point.pmatrix(this._OA.x,this._OA.y)} + k\\cdot ${n.Point.pmatrix(this._d.x,this._d.y)}`}}get a(){return this._a}set a(t){this._a=t}get b(){return this._b}set b(t){this._b=t}get c(){return this._c}set c(t){this._c=t}get OA(){return this._OA}set OA(t){this._OA=t}get d(){return this._d}get n(){return this._n}get normal(){return new s.Vector(this._a,this._b)}get director(){return this._d.clone()}set d(t){this._d=t}get slope(){return this._a.clone().opposed().divide(this._b)}get height(){return this._c.clone().opposed().divide(this._b)}distanceTo(t){let e=t.x.clone().multiply(this._a).add(t.y.clone().multiply(this._b)).add(this._c).abs(),i=this.normal.normSquare;if(i.isZero())return{value:NaN,tex:"Not a line",fraction:(new r.Fraction).infinite()};let s=e.value/Math.sqrt(i.value),n=e.clone().divide(i.clone().sqrt());return i.isSquare()?{value:s,tex:n.tex,fraction:n}:{value:s,tex:`\\frac{${e.tex}}{\\sqrt{${i.tex}}}`,fraction:n}}hitSegment(t,e){let i=this.intersection(new c(t,e));return!!i.hasIntersection&&i.point.x.value>=Math.min(t.x.value,e.x.value)&&i.point.x.value<=Math.max(t.x.value,e.x.value)&&i.point.y.value>=Math.min(t.y.value,e.y.value)&&i.point.y.value<=Math.max(t.y.value,e.y.value)}canonicalAsFloatCoefficient(t){void 0===t&&(t=2),this._a.value,this._b.value,this._c.value;let e="";return this._a.isZero()||(e=this._a.isOne()?"x":this._a.clone().opposed().isOne()?"-x":this._a.value.toFixed(t)+"x"),this._b.isZero()||(this._b.isPositive()&&(e+="+"),e+=this._b.value.toFixed(t)+"y"),this._c.isZero()||(this._c.isPositive()&&(e+="+"),e+=this._c.value.toFixed(t)),e+"=0"}}e.Line=c,c.PERPENDICULAR=l.Perpendicular,c.PARALLEL=l.Parallel},557:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Point=void 0;const s=i(9),n=i(586),o=i(506);class r{constructor(...t){return this.parse=(...t)=>{if(this.zero(),0===t.length)return this;if(1===t.length){if(t[0]instanceof r)return this._x=t[0].x.clone(),this._y=t[0].y.clone(),this;if("string"==typeof t[0]){let e=t[0].split(",");if(2===e.length)return this._x=new o.Fraction(e[0]).reduce(),this._y=new o.Fraction(e[1]).reduce(),this}return t[0]instanceof class{}?(this._x=new o.Fraction(t[0].x).reduce(),this._y=new o.Fraction(t[0].y).reduce(),this):this.zero()}return 2===t.length?(this._x=new o.Fraction(t[0]).reduce(),this._y=new o.Fraction(t[1]).reduce(),this):this},this.clone=()=>(this._x=this._x.clone(),this._y=this._y.clone(),this),this.zero=()=>(this._x=new o.Fraction(null),this._y=new o.Fraction(null),this),this.origin=()=>(this.zero(),this),this.middleOf=(t,e)=>(this._x=t.x.clone().add(e.x).divide(2),this._y=t.y.clone().add(e.y).divide(2),this),this.texValues=t=>{let e=[];return e.push(this._x.value.toFixed(void 0===t?2:t)),e.push(this._y.value.toFixed(void 0===t?2:t)),`\\left(${e.join(";")}\\right)`},this.distanceTo=t=>{let e=0,i=new o.Fraction,a="";if(t instanceof s.Line)return t.distanceTo(this);if(t instanceof r){let s=new n.Vector(this,t);e=s.norm,i=s.normSquare.sqrt(),a=s.normSquare.isSquare()?i.tex:`\\sqrt{\\frac{ ${s.normSquare.numerator} }{ ${s.normSquare.denominator} }}`}return{value:e,fraction:i,tex:a}},this.isInListOfPoints=t=>t.map((t=>t.key)).includes(this.key),this._x=(new o.Fraction).zero(),this._y=(new o.Fraction).zero(),void 0!==t&&this.parse(...t),this}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get tex(){let t=[];return t.push(this._x.tex),t.push(this._y.tex),`\\left(${t.join(";")}\\right)`}get display(){let t=[];return t.push(this._x.tex),t.push(this._y.tex),`(${t.join(";")})`}get key(){return`${this.x.display};${this.y.display}`}}e.Point=r,r.pmatrix=(t,e,i)=>void 0===i?`\\begin{pmatrix} ${t.tex?t.tex:t} \\\\ ${e.tex?e.tex:e} \\end{pmatrix}`:`\\begin{pmatrix} ${t.tex?t.tex:t} \\\\ ${e.tex?e.tex:e} \\\\ ${i.tex?i.tex:i} \\end{pmatrix}`},164:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Triangle=void 0;const s=i(557),n=i(506),o=i(586),r=i(9),a=i(760);class h{constructor(...t){return this.parse=(...t)=>{if(6===t.length){let e=t.map((t=>new n.Fraction(t)));return this.parse(new s.Point(e[0],e[1]),new s.Point(e[2],e[3]),new s.Point(e[4],e[5]))}if(3===t.length){if(3===t.filter((t=>"string"==typeof t)).length)return this.parse(...t.map((t=>new r.Line(t))));if(3===t.filter((t=>t instanceof r.Line)).length){this._lines={AB:t[0],BC:t[1],AC:t[2]};let e=t[0].intersection(t[1]);if(!e.hasIntersection)return this;if(this._B=e.point.clone(),e=t[1].intersection(t[2]),!e.hasIntersection)return this;if(this._C=e.point.clone(),e=t[2].intersection(t[0]),!e.hasIntersection)return this;this._A=e.point.clone()}else{if(t.filter((t=>t instanceof s.Point)).length<3)return this.parse(new s.Point(t[0]),new s.Point(t[1]),new s.Point(t[2]));this._A=t[0].clone(),this._B=t[1].clone(),this._C=t[2].clone(),this._lines={AB:new r.Line(this._A,this._B),BC:new r.Line(this._B,this._C),AC:new r.Line(this._A,this._C)}}}else if(1===t.length&&t[0]instanceof h)return t[0].clone();return this._updateTriangle(),this},this.clone=()=>(this._A=this._A.clone(),this._B=this._B.clone(),this._C=this._C.clone(),this._lines={AB:this._lines.AB.clone(),BC:this._lines.BC.clone(),AC:this._lines.AC.clone()},this._updateTriangle(),this),this._updateTriangle=()=>{this._middles={AB:(new s.Point).middleOf(this._A,this._B),AC:(new s.Point).middleOf(this._A,this._C),BC:(new s.Point).middleOf(this._B,this._C)},this._remarquables=this._calculateRemarquableLines()},this.getPointByName=t=>{switch(t.toUpperCase()){case"A":return this._A;case"B":return this._B;case"C":return this._C}return this._A},this.getSegment=(t,e)=>new o.Vector(this.getPointByName(t),this.getPointByName(e)),this._calculateRemarquableLines=()=>{let t={medians:{A:new r.Line(this._A,this._middles.BC),B:new r.Line(this._B,this._middles.AC),C:new r.Line(this._C,this._middles.AB),intersection:null},mediators:{AB:new r.Line(this._middles.AB,new o.Vector(this._A,this._B).normal()),AC:new r.Line(this._middles.AC,new o.Vector(this._A,this._C).normal()),BC:new r.Line(this._middles.BC,new o.Vector(this._B,this._C).normal()),intersection:null},heights:{A:new r.Line(this._A,new o.Vector(this._B,this._C).normal()),B:new r.Line(this._B,new o.Vector(this._A,this._C).normal()),C:new r.Line(this._C,new o.Vector(this._A,this._B).normal()),intersection:null},bisectors:{A:this._calculateBisectors("A"),B:this._calculateBisectors("B"),C:this._calculateBisectors("C"),intersection:null}};return t.medians.intersection=t.medians.A.intersection(t.medians.B).point,t.mediators.intersection=t.mediators.AB.intersection(t.mediators.BC).point,t.heights.intersection=t.heights.A.intersection(t.heights.B).point,t.bisectors.intersection=t.bisectors.A.intersection(t.bisectors.B).point,t},this._calculateBisectors=t=>{let e,i,s=this.lines;"A"===t?(e=s.AB,i=s.AC):"B"===t?(e=s.AB,i=s.BC):"C"===t&&(e=s.BC,i=s.AC);let n=new r.Line(new a.Equation(e.equation.left.clone().multiply(i.n.simplify().norm),i.equation.left.clone().multiply(e.n.simplify().norm)).reorder(!0).simplify()),o=new r.Line(new a.Equation(e.equation.left.clone().multiply(i.n.simplify().norm),i.equation.left.clone().multiply(e.n.simplify().norm).opposed()).reorder(!0).simplify());return"A"===t?n.hitSegment(this.B,this.C)?n:o:"B"===t?n.hitSegment(this.A,this.C)?n:o:"C"===t?n.hitSegment(this.B,this.A)?n:o:n},t.length>0&&this.parse(...t),this}get A(){return this._A}get B(){return this._B}get C(){return this._C}get AB(){return this.getSegment("A","B")}get BA(){return this.getSegment("B","A")}get BC(){return this.getSegment("B","C")}get CB(){return this.getSegment("C","B")}get AC(){return this.getSegment("A","C")}get CA(){return this.getSegment("C","A")}get isRectangle(){return!!this.AB.isNormalTo(this.BC)||!!this.AB.isNormalTo(this.AC)||!!this.BC.isNormalTo(this.AC)}get isEquilateral(){return this.AB.normSquare.isEqual(this.BC.normSquare)&&this.AB.normSquare.isEqual(this.AC.normSquare)}get isIsocele(){return this.AB.normSquare.isEqual(this.BC.normSquare)||this.AB.normSquare.isEqual(this.AC.normSquare)||this.BC.normSquare.isEqual(this.AC.normSquare)}get lines(){return this._lines}get remarquables(){return this._remarquables}}e.Triangle=h},586:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Vector=void 0;const s=i(506),n=i(956),o=i(557);class r{constructor(...t){this.parse=(...t)=>{if(this.zero(),0===t.length)return this;if(1===t.length)return t[0]instanceof r?t[0].clone():this._parseString(t[0]);if(t.length>=2){if(t[0]instanceof o.Point&&t[1]instanceof o.Point)return this._x=t[1].x.clone().subtract(t[0].x),this._y=t[1].y.clone().subtract(t[0].y),this;(t[0]instanceof s.Fraction||!isNaN(t[0]))&&(this._x=new s.Fraction(t[0])),(t[1]instanceof s.Fraction||!isNaN(t[1]))&&(this._y=new s.Fraction(t[1])),"object"!=typeof t[0]||isNaN(t[0].x)||isNaN(t[0].x)||"object"!=typeof t[1]||isNaN(t[1].x)||isNaN(t[1].x)||(this._x=new s.Fraction(+t[1].x-t[0].x),this._y=new s.Fraction(+t[1].y-t[0].y))}return this},this.clone=()=>{let t=new r;return null!==this._x&&(t.x=this._x.clone()),null!==this._y&&(t.y=this._y.clone()),t},this.reset=()=>(this._x=null,this._y=null,this),this.zero=()=>(this.reset(),this._x=new s.Fraction(null),this._y=new s.Fraction(null),this),this.one=()=>(this._x=new s.Fraction,this._y=new s.Fraction,this),this._parseString=t=>{let e=t.split(/[,;\s]/g);return this.x=new s.Fraction(e[0]||null),this.y=new s.Fraction(e[1]||null),this},this.opposed=()=>(this._x.opposed(),this._y.opposed(),this),this.add=t=>(this._x.add(t.x),this._y.add(t.y),this),this.subtract=t=>this.add(t.clone().opposed()),this.scalarProductWithVector=t=>this._x.clone().multiply(t.x).add(this._y.clone().multiply(t.y)),this.normal=()=>{let t=this.x.clone().opposed(),e=this.y.clone();return this._x=e,this._y=t,this},this.isNormalTo=t=>this.scalarProductWithVector(t).isZero(),this.multiplyByScalar=t=>{let e=new s.Fraction(t);return this._x.multiply(e),this._y.multiply(e),this},this.divideByScalar=t=>this.multiplyByScalar(new s.Fraction(t).invert()),this.simplify=()=>this.multiplyByScalar(n.Numeric.lcm(this._x.denominator,this._y.denominator)).divideByScalar(n.Numeric.gcd(this._x.numerator,this._y.numerator)),this.angleWith=(t,e,i)=>{let s=this.scalarProductWithVector(t).value,n=i?1:180/Math.PI;return e&&(s=Math.abs(s)),n*Math.acos(s/(this.norm*t.norm))},this._x=(new s.Fraction).zero(),this._y=(new s.Fraction).zero(),void 0!==t&&this.parse(...t)}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get normSquare(){return this._x.clone().pow(2).add(this._y.clone().pow(2))}get norm(){return Math.sqrt(this.normSquare.value)}get tex(){return`\\begin{pmatrix}${this._x.tex} \\\\ ${this._y.tex} \\end{pmatrix}`}}e.Vector=r,r.scalarProduct=(t,e)=>t.x.value*e.x.value+t.y.value*e.y.value},956:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Numeric=void 0;class i{static round(t,e=2){return Number(Math.round(Number(t+"e"+e))+"e-"+e)}static prime(t){let e=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973];return void 0===t?e:e.slice(0,Math.max(e.length,t))}static dividers(t){let e;const i=Math.sqrt(Math.abs(t));e=[];for(let s=1;s<=i;s++)t%s==0&&(e.push(s),e.push(t/s));return e.sort((function(t,e){return t-e})),[...new Set(e)]}static gcd(...t){let e=function(t,i){return 0===i?t:e(i,t%i)},i=1,s=2;if(0===t.length)return 1;if(1===t.length)return 0===t[0]?1:t[0];if(i=e(t[0],t[1]),1===i)return 1;for(s=2;s<t.length&&(i=e(i,t[s]),1!==i);s++);return Math.abs(i)}static lcm(...t){return t.reduce((function(t,e){return Math.abs(t*e/i.gcd(t,e))}))}static pythagoricianTripletsWithTarget(t,e){const i=[],s=!0===e?+t:t**2;for(let e=0;e<=t;e++)for(let n=0;n<=t;n++)e**2+n**2===s&&i.push([e,n,t]);return i}}e.Numeric=i},330:function(t,e,i){var s=this&&this.__createBinding||(Object.create?function(t,e,i,s){void 0===s&&(s=i);var n=Object.getOwnPropertyDescriptor(e,i);n&&!("get"in n?!e.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,s,n)}:function(t,e,i,s){void 0===s&&(s=i),t[s]=e[i]}),n=this&&this.__exportStar||function(t,e){for(var i in t)"default"===i||Object.prototype.hasOwnProperty.call(e,i)||s(e,t,i)};Object.defineProperty(e,"__esModule",{value:!0}),e.Random=void 0;const o=i(22),r=i(793),a=i(140),h=i(754);var l;n(i(230),e),(l=e.Random||(e.Random={})).polynom=function(t){return new o.rndPolynom(t).generate()},l.monom=function(t){return new r.rndMonom(t).generate()},l.fraction=function(t){return new h.rndFraction(t).generate()},l.number=function(t,e){return a.rndHelpers.randomInt(t,e)},l.numberSym=function(t,e){return a.rndHelpers.randomIntSym(t,e)},l.bool=function(t){return a.rndHelpers.randomBool(t)},l.array=function(t,e){return a.rndHelpers.randomArray(t,e)},l.item=function(t){return a.rndHelpers.randomItem(t)},l.shuffle=function(t){a.rndHelpers.shuffleArray(t)}},373:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.randomCore=void 0,e.randomCore=class{constructor(){this.mergeConfig=(t,e)=>void 0!==t?{...e,...t}:e,this.generate=()=>{},this.config=t=>(this._config=this.mergeConfig(t,this._defaultConfig),this)}}},754:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.rndFraction=void 0;const s=i(373),n=i(330),o=i(506);class r extends s.randomCore{constructor(t){super(),this.generate=()=>{let t=new o.Fraction;return this._config.negative?t.numerator=n.Random.numberSym(this._config.max,this._config.zero):t.numerator=n.Random.number(this._config.zero?0:1,this._config.max),this._config.natural?t.denominator=1:t.denominator=n.Random.number(1,this._config.max),this._config.reduced?t.reduce():t},this._defaultConfig={negative:!0,max:10,reduced:!0,zero:!0,natural:!1},this._config=this.mergeConfig(t,this._defaultConfig)}}e.rndFraction=r},140:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.rndHelpers=void 0;class i{static randomBool(t=.5){return Math.random()<t}static randomInt(t,e){return void 0===e?this.randomInt(0,t):Math.floor(Math.random()*(e-t+1)+t)}static randomIntSym(t,e){return!1===e?this.randomBool()?this.randomInt(1,t):-this.randomInt(1,t):this.randomInt(-t,t)}static randomArray(t,e){return void 0===e&&(e=1),t.length<=0?Object.values(t):i.shuffleArray(t).slice(0,e)}static randomItem(t){return 0===t.length?"":this.randomArray(t,1)[0]}static shuffleArray(t){let e=Object.values(t);for(let t=e.length-1;t>0;t--){const i=Math.floor(Math.random()*(t+1)),s=e[t];e[t]=e[i],e[i]=s}return e}}e.rndHelpers=i},793:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.rndMonom=void 0;const s=i(373),n=i(330),o=i(937);class r extends s.randomCore{constructor(t){super(),this.generate=()=>{let t=new o.Monom;if("boolean"==typeof this._config.fraction?t.coefficient=n.Random.fraction({zero:this._config.zero,reduced:!0,natural:!this._config.fraction}):t.coefficient=n.Random.fraction(this._config.fraction),this._config.letters.length>1){for(let e of this._config.letters.split(""))t.setLetter(e,0);for(let e=0;e<this._config.degree;e++){const e=n.Random.item(this._config.letters.split(""));t.setLetter(e,t.degree(e).clone().add(1))}}else t.setLetter(this._config.letters,this._config.degree);return t},this._defaultConfig={letters:"x",degree:2,fraction:!0,zero:!1},this._config=this.mergeConfig(t,this._defaultConfig)}}e.rndMonom=r},22:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.rndPolynom=void 0;const s=i(373),n=i(793),o=i(330),r=i(38);class a extends s.randomCore{constructor(t){super(),this.generate=()=>{if(this._config.factorable&&this._config.degree>1)return this.factorable();let t,e=(new r.Polynom).empty();for(let i=this._config.degree;i>=0;i--)t=new n.rndMonom({letters:this._config.letters,degree:i,fraction:this._config.fraction,zero:i!==this._config.degree&&this._config.allowNullMonom}).generate(),this._config.unit&&this._config.degree===i&&t.coefficient.one(),e.add(t);if(this._config.positive&&e.monomByDegree().coefficient.isNegative()&&e.monomByDegree().coefficient.opposed(),this._config.numberOfMonoms>0&&this._config.numberOfMonoms<e.length){let t=e.monomByDegree().clone();e.monoms=o.Random.array(e.monoms.slice(1),this._config.numberOfMonoms-1),e.add(t).reorder().reduce()}return e},this.factorable=()=>{let t=(new r.Polynom).one(),e={...this._config};e.degree=1,e.factorable=!1;for(let i=0;i<this._config.degree;i++)t.multiply(o.Random.polynom(e));return t},this._defaultConfig={letters:"x",degree:2,fraction:!1,zero:!1,unit:!1,factorable:!1,allowNullMonom:!0,numberOfMonoms:0,positive:!0},this._config=this.mergeConfig(t,this._defaultConfig)}}e.rndPolynom=a},230:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},505:(t,e)=>{var i,s;Object.defineProperty(e,"__esModule",{value:!0}),e.Shutingyard=e.ShutingyardMode=e.ShutingyardType=e.tokenConstant=void 0,e.tokenConstant={pi:Math.PI,e:Math.exp(1)},function(t){t.VARIABLE="variable",t.COEFFICIENT="coefficient",t.OPERATION="operation",t.CONSTANT="constant",t.FUNCTION="function",t.MONOM="monom"}(i=e.ShutingyardType||(e.ShutingyardType={})),function(t){t.POLYNOM="polynom",t.SET="set",t.NUMERIC="numeric"}(s=e.ShutingyardMode||(e.ShutingyardMode={})),e.Shutingyard=class{constructor(t){this._rpn=[],this._mode=void 0===t?s.POLYNOM:t,this.tokenConfigInitialization()}get rpn(){return this._rpn}tokenConfigInitialization(){return this._mode===s.SET?(this._tokenConfig={"&":{precedence:3,associative:"left",type:i.OPERATION},"|":{precedence:3,associative:"left",type:i.OPERATION},"!":{precedence:4,associative:"right",type:i.OPERATION},"-":{precedence:2,associative:"left",type:i.OPERATION}},this._uniformize=!1):this._mode===s.NUMERIC?(this._tokenConfig={"^":{precedence:4,associative:"right",type:i.OPERATION},"*":{precedence:3,associative:"left",type:i.OPERATION},"/":{precedence:3,associative:"left",type:i.OPERATION},"+":{precedence:2,associative:"left",type:i.OPERATION},"-":{precedence:2,associative:"left",type:i.OPERATION},"%":{precedence:3,associative:"right",type:i.OPERATION},sin:{precedence:4,associative:"right",type:i.FUNCTION},cos:{precedence:4,associative:"right",type:i.FUNCTION},tan:{precedence:4,associative:"right",type:i.FUNCTION},sqrt:{precedence:4,associative:"right",type:i.FUNCTION}},this._uniformize=!1):(this._tokenConfig={"^":{precedence:4,associative:"right",type:i.OPERATION},"*":{precedence:3,associative:"left",type:i.OPERATION},"/":{precedence:3,associative:"left",type:i.OPERATION},"+":{precedence:2,associative:"left",type:i.OPERATION},"-":{precedence:2,associative:"left",type:i.OPERATION}},this._uniformize=!0),this._tokenKeys=Object.keys(this._tokenConfig).sort(((t,e)=>e.length-t.length)),this._tokenConfig}NextToken(t,n){let o,r;if(o="",r="","("===t[n])o="(",r="(";else if(")"===t[n])o=")",r=")";else if(","===t[n])o=",",r="function-argument";else{for(let e of this._tokenKeys)if(t.substring(n,n+e.length)===e){o+=e,r=this._tokenConfig[e].type;break}for(let s in e.tokenConstant)if(t.substring(n,n+s.length)===s){o+=s,r=i.CONSTANT;break}""===o&&(t[n].match(/[0-9]/)?(this._mode,s.POLYNOM,o=t.substring(n).match(/^([0-9.,]+)/)[0],r=i.COEFFICIENT):t[n].match(/[a-zA-Z]/)?(o=t.substring(n).match(/^([a-zA-Z])/)[0],r=i.VARIABLE):(console.log("Unidentified token",t[n],t,n),o=t[n],r=i.MONOM))}return[o,n+o.length,r]}Uniformizer(t){if(!this._uniformize)return t;let e;e=t.replace(/\)\(/g,")*("),e=e.replace(/([\da-zA-Z])(\()/g,"$1*$2"),e=e.replace(/(\))([\da-zA-Z])/g,"$1*$2"),e=e.replace(/([0-9])([a-zA-Z])/g,"$1*$2"),e=e.replace(/([a-zA-Z])([0-9])/g,"$1*$2"),e=e.replace(/([abcxyz])([abcxyz])/g,"$1*$2");let i=["sin","cos","tan"];for(let t of i)e=e.replace(new RegExp(t+"\\*","g"),t);return e}parse(t,e){let i=[],s=[],n="",o=0,r="",a=0;t=this.Uniformizer(t);let h,l=50;for(;o<t.length;){if(l--,0===l){console.log("SECURITY LEVEL 1 EXIT");break}switch([n,o,r]=this.NextToken(t,o),r){case"monom":case"coefficient":case"variable":case"constant":i.push({token:n,tokenType:r});break;case"operation":if(a=s.length,s.length>0){let t=s[s.length-1];for(h=50;t.token in this._tokenConfig&&("left"===this._tokenConfig[n].associative&&this._tokenConfig[n].precedence<=this._tokenConfig[t.token].precedence||"right"===this._tokenConfig[n].associative&&this._tokenConfig[n].precedence<this._tokenConfig[t.token].precedence);){if(h--,0===h){console.log("SECURITY LEVEL 2 OPERATION EXIT");break}if(i.push(s.pop()||{token:"",tokenType:"operation"}),0===s.length)break;t=s[s.length-1]}}s.push({token:n,tokenType:r});break;case"function-argument":for(h=50;"("!==s[s.length-1].token&&s.length>0;){if(h--,0===h){console.log("SECURITY LEVEL 2 FUNCTION ARGUMENT EXIT");break}i.push(s.pop()||{token:n,tokenType:r})}break;case"(":s.push({token:n,tokenType:r}),"-"===t[o]&&i.push({token:"0",tokenType:"coefficient"});break;case")":for(h=50;"("!==s[s.length-1].token&&s.length>1;){if(h--,0===h){console.log("SECURITY LEVEL 2 CLOSING PARENTHESE EXIT");break}i.push(s.pop()||{token:n,tokenType:r})}s.pop();break;case"function":s.push({token:n,tokenType:r});break;default:console.log(`SHUTING YARD: ${r} : ${n} `)}}return this._rpn=i.concat(s.reverse()),this}}}},e={};!function i(s){var n=e[s];if(void 0!==n)return n.exports;var o=e[s]={exports:{}};return t[s].call(o.exports,o,o.exports,i),o.exports}(607)})();
//# sourceMappingURL=pi.min.js.map